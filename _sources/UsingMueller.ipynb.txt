{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using the Mueller module \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this notebook, we demonstrate how to use the Mueller module, which defines the `MuellerMatrix` and `StokesVector` classes and various operations on them.\n",
    "\n",
    "The first thing, of course, is to import the package and some other packages that we will be using. We will be creating some random matrices and vectors, so we need `random`, and we will be graphing a few things, so we need `maptplotlib.pyplot`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pySCATMECH.mueller import *\n",
    "import random \n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Mueller matrices\n",
    "\n",
    "The class `MuellerMatrix` is used for handling Mueller matrices. Here we show several ways one can create a unit Mueller matrix. The `JonesMueller()` function converts a 2 x 2  complex Jones matrix into a Mueller matrix. And `MuellerUnit()` returns a unit Mueller matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1. 0. 0. 0.]\n",
      " [0. 1. 0. 0.]\n",
      " [0. 0. 1. 0.]\n",
      " [0. 0. 0. 1.]]\n"
     ]
    }
   ],
   "source": [
    "m1 = MuellerMatrix([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]])\n",
    "m2 = MuellerMatrix([1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1])\n",
    "m3 = MuellerMatrix(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)\n",
    "m4 = JonesMueller([[1,0],[0,1]])\n",
    "m5 = MuellerUnit()\n",
    "print(m5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can check to see that these are valid matrices. The `valid` method tests whether a Mueller matrix maps the set of valid Stokes vectors onto itself. The `physically_valid` method tests whether a Mueller matrix is a convex sum of Jones-Mueller matrices. The latter is a more stringent test of whether the matrix is realizable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "print(m1.valid())\n",
    "print(m1.physically_valid())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But, a random matrix is not necessarily valid. In fact, it probably isn't!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number valid() is True: 1\n",
      "Number physically valid() is True: 0\n"
     ]
    }
   ],
   "source": [
    "# Returns a random number with a normal distribution...\n",
    "ran = lambda : random.gauss(0,1)\n",
    "\n",
    "# Create 20 random matrices...\n",
    "m1 = [MuellerMatrix([[ran(), ran(), ran(), ran()],\n",
    "                    [ran(), ran(), ran(), ran()],\n",
    "                    [ran(), ran(), ran(), ran()],\n",
    "                    [ran(), ran(), ran(), ran()]]) for i in range(20)]\n",
    "\n",
    "# See if they are valid...\n",
    "print(\"Number valid() is True:\", sum([m.valid() for m in m1]))\n",
    "print(\"Number physically valid() is True:\", sum([m.physically_valid() for m in m1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A Mueller matrix made from a random Jones matrix, however, always yields a valid Mueller matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number value() is True: 20\n",
      "Number physically valid() is True: 20\n"
     ]
    }
   ],
   "source": [
    "# Returns a random complex number with a normal distribution...\n",
    "ranc = lambda : random.gauss(0,1)+random.gauss(0,1)*1j\n",
    "\n",
    "# Create 20 random Jones-Mueller matrices...\n",
    "m1 = [JonesMueller([[ranc(), ranc()], [ranc(), ranc()]]) for i in range(20)]\n",
    "\n",
    "# See if they are valid...\n",
    "print(\"Number value() is True:\", sum([m.valid() for m in m1]))\n",
    "print(\"Number physically valid() is True:\", sum([m.physically_valid() for m in m1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To make a random depolarizing Mueller matrix, we average some random Jones-Mueller matrices:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 0.79126519  0.51754966  0.04396498 -0.09197144]\n",
      " [-0.21857972 -0.10891561  0.03399935  0.04409256]\n",
      " [ 0.24109773  0.27199561  0.06684414 -0.02241909]\n",
      " [ 0.31260027  0.21946993  0.16903187 -0.02210762]]\n",
      "m is a valid Stokes to Stokes mapper: True\n",
      "m is the sum of Jones-Mueller matrices: True\n"
     ]
    }
   ],
   "source": [
    "def RandomMuellerMatrix(n):\n",
    "    \"\"\"\n",
    "    Creates a random Mueller matrix by averaging `n` Jones-Mueller matrices.\n",
    "    \"\"\"\n",
    "    ranc = lambda : (random.gauss(0,1)+random.gauss(0,1)*1j)/2\n",
    "    return sum([JonesMueller([[ranc(),ranc()],[ranc(),ranc()]]) for i in range(n)])/n\n",
    "\n",
    "m = RandomMuellerMatrix(4)\n",
    "print(m)\n",
    "print(\"m is a valid Stokes to Stokes mapper:\",m.valid())\n",
    "print(\"m is the sum of Jones-Mueller matrices:\",m.physically_valid())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Stokes Vectors\n",
    "\n",
    "\n",
    "The class `StokesVector` is used for handling Stokes vectors.\n",
    "We can create a Stokes vector a several ways.  The `Polarization` function provides a means for generating arbitrary polarizations by name or parameter. (Note that SCATMECH's convention for the signs of the Stokes vector elements differs from some others.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unpolarized Stokes vector: StokesVector(1,0,0,0)\n",
      "Unpolarized Stokes vector: StokesVector(1,0,0,0)\n",
      "s-polarized unit polarization from a Jones vector: StokesVector(1.0,1.0,0.0,0.0)\n",
      "p-polarized unit Stokes vector: StokesVector(1,-1,0,0)\n",
      "s-polarized unit Stokes vector: StokesVector(1,1,0,0)\n",
      "Left-handed circularly polarized unit Stokes vector: StokesVector(1,0,0,1)\n",
      "Right-handed circularly polarized unit Stokes vector with intensity 2: StokesVector(2,0,0,-2)\n",
      "Unpolarized Stokes vector: StokesVector(1,0,0,0)\n",
      "Unpolarized Stokes vector: StokesVector(1,0,0,0)\n",
      "Linear polarization at 45 degrees: StokesVector(1.0,6.123233995736766e-17,1.0,0.0)\n",
      "Elliptically polarized radiation: StokesVector(1.0,0.2869652992419897,0.7102640395405222,0.6427876096865393)\n",
      "Partially polarized radiation: StokesVector(1.0,0.8,0.0,0.0)\n",
      "Partially polarized elliptical polarized radiation with intensity 3:\n",
      " StokesVector(3.0,0.6026271284081782,1.4915544830350964,1.3498539803417322)\n"
     ]
    }
   ],
   "source": [
    "print(\"Unpolarized Stokes vector:\", StokesVector((1,0,0,0)) )\n",
    "\n",
    "print(\"Unpolarized Stokes vector:\", StokesVector(1,0,0,0) )\n",
    "\n",
    "print(\"s-polarized unit polarization from a Jones vector:\", JonesStokes((1.,0.)) )\n",
    "\n",
    "print(\"p-polarized unit Stokes vector:\", Polarization('p') )\n",
    "\n",
    "print(\"s-polarized unit Stokes vector:\", Polarization(state = 's') )\n",
    "\n",
    "print(\"Left-handed circularly polarized unit Stokes vector:\", Polarization(\"L\") )\n",
    "\n",
    "print(\"Right-handed circularly polarized unit Stokes vector with intensity 2:\", Polarization(\"R\", I=2) )\n",
    "\n",
    "print(\"Unpolarized Stokes vector:\", Polarization(\"U\") )\n",
    "\n",
    "print(\"Unpolarized Stokes vector:\", Polarization('s', DOP=0) )\n",
    "\n",
    "print(\"Linear polarization at 45 degrees:\", Polarization(angle = 45*deg) )\n",
    "\n",
    "print(\"Elliptically polarized radiation:\", Polarization(angle = 34*deg, ellipticity = 20*deg) )\n",
    "\n",
    "print(\"Partially polarized radiation:\", Polarization(\"S\", DOP = 0.8) )\n",
    "\n",
    "print(\"Partially polarized elliptical polarized radiation with intensity 3:\\n\", \n",
    "      Polarization(angle = 34*deg, ellipticity = 20*deg, DOP = 0.7, I = 3) )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that polarization sensitivity can also be expressed as a Stokes vector. However, there is often a factor of two that enters for all but unpolarized sensitivity. That is, a perfect polarizer transmits 50 % of unpolarized radiation. We can apply `senstivity = True` to the `Polarization()` function, or use a `Sensitivity` function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal for p-polarization: 1.0\n",
      "Signal for s-polarization: 0.0\n"
     ]
    }
   ],
   "source": [
    "# Only sensitive to p-polarization\n",
    "# The following two statements are equivalent...\n",
    "sens = Polarization('p', sensitivity = True)\n",
    "sens = Sensitivity('p')\n",
    "\n",
    "print('Signal for p-polarization:',sens @ Polarization('p'))\n",
    "print('Signal for s-polarization:',sens @ Polarization('s'))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sensitivity does not need to be full polarizing. By setting `DOP` in the range [0,1], sensitivity to the orthogonal polarization can be non-zero."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sens =  StokesVector(0.6,-0.4,0.0,0.0)\n",
      "Signal for p-polarization: 1.0\n",
      "Signal for s-polarization: 0.19999999999999996\n"
     ]
    }
   ],
   "source": [
    "sens = Sensitivity('p',DOP=.8)\n",
    "print('sens = ', sens)\n",
    "\n",
    "print('Signal for p-polarization:',sens @ Polarization('p'))\n",
    "print('Signal for s-polarization:',sens @ Polarization('s'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In a manner similar to what we did with Mueller matrices, we can create a random Stokes vector by averaging a number of Stokes \n",
    "vectors created from Jones vectors. For a single Jones vector, the Stokes vector is depolarized. For more than one, the Stokes vector is partially polarized or unpolarized. We illustrate that by plotting the degree of polarization (using the `DOP()` method) as a function of the number of Jones-Stokes vectors we add."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"392.7pt\" height=\"277.314375pt\" viewBox=\"0 0 392.7 277.314375\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n",
       " <metadata>\n",
       "  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n",
       "   <cc:Work>\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n",
       "    <dc:date>2023-03-02T13:10:59.362924</dc:date>\n",
       "    <dc:format>image/svg+xml</dc:format>\n",
       "    <dc:creator>\n",
       "     <cc:Agent>\n",
       "      <dc:title>Matplotlib v3.5.2, https://matplotlib.org/</dc:title>\n",
       "     </cc:Agent>\n",
       "    </dc:creator>\n",
       "   </cc:Work>\n",
       "  </rdf:RDF>\n",
       " </metadata>\n",
       " <defs>\n",
       "  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <g id=\"patch_1\">\n",
       "   <path d=\"M 0 277.314375 \n",
       "L 392.7 277.314375 \n",
       "L 392.7 0 \n",
       "L 0 0 \n",
       "L 0 277.314375 \n",
       "z\n",
       "\" style=\"fill: none\"/>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path d=\"M 43.78125 239.758125 \n",
       "L 378.58125 239.758125 \n",
       "L 378.58125 22.318125 \n",
       "L 43.78125 22.318125 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\">\n",
       "    <g id=\"xtick_1\">\n",
       "     <g id=\"line2d_1\">\n",
       "      <defs>\n",
       "       <path id=\"m6d73d55cf4\" d=\"M 0 0 \n",
       "L 0 3.5 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#m6d73d55cf4\" x=\"55.89368\" y=\"239.758125\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_1\">\n",
       "      <!-- 0 -->\n",
       "      <g transform=\"translate(52.71243 254.356562)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-30\" d=\"M 2034 4250 \n",
       "Q 1547 4250 1301 3770 \n",
       "Q 1056 3291 1056 2328 \n",
       "Q 1056 1369 1301 889 \n",
       "Q 1547 409 2034 409 \n",
       "Q 2525 409 2770 889 \n",
       "Q 3016 1369 3016 2328 \n",
       "Q 3016 3291 2770 3770 \n",
       "Q 2525 4250 2034 4250 \n",
       "z\n",
       "M 2034 4750 \n",
       "Q 2819 4750 3233 4129 \n",
       "Q 3647 3509 3647 2328 \n",
       "Q 3647 1150 3233 529 \n",
       "Q 2819 -91 2034 -91 \n",
       "Q 1250 -91 836 529 \n",
       "Q 422 1150 422 2328 \n",
       "Q 422 3509 836 4129 \n",
       "Q 1250 4750 2034 4750 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_2\">\n",
       "     <g id=\"line2d_2\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m6d73d55cf4\" x=\"118.008708\" y=\"239.758125\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_2\">\n",
       "      <!-- 20 -->\n",
       "      <g transform=\"translate(111.646208 254.356562)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-32\" d=\"M 1228 531 \n",
       "L 3431 531 \n",
       "L 3431 0 \n",
       "L 469 0 \n",
       "L 469 531 \n",
       "Q 828 903 1448 1529 \n",
       "Q 2069 2156 2228 2338 \n",
       "Q 2531 2678 2651 2914 \n",
       "Q 2772 3150 2772 3378 \n",
       "Q 2772 3750 2511 3984 \n",
       "Q 2250 4219 1831 4219 \n",
       "Q 1534 4219 1204 4116 \n",
       "Q 875 4013 500 3803 \n",
       "L 500 4441 \n",
       "Q 881 4594 1212 4672 \n",
       "Q 1544 4750 1819 4750 \n",
       "Q 2544 4750 2975 4387 \n",
       "Q 3406 4025 3406 3419 \n",
       "Q 3406 3131 3298 2873 \n",
       "Q 3191 2616 2906 2266 \n",
       "Q 2828 2175 2409 1742 \n",
       "Q 1991 1309 1228 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-32\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_3\">\n",
       "     <g id=\"line2d_3\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m6d73d55cf4\" x=\"180.123736\" y=\"239.758125\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_3\">\n",
       "      <!-- 40 -->\n",
       "      <g transform=\"translate(173.761236 254.356562)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-34\" d=\"M 2419 4116 \n",
       "L 825 1625 \n",
       "L 2419 1625 \n",
       "L 2419 4116 \n",
       "z\n",
       "M 2253 4666 \n",
       "L 3047 4666 \n",
       "L 3047 1625 \n",
       "L 3713 1625 \n",
       "L 3713 1100 \n",
       "L 3047 1100 \n",
       "L 3047 0 \n",
       "L 2419 0 \n",
       "L 2419 1100 \n",
       "L 313 1100 \n",
       "L 313 1709 \n",
       "L 2253 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-34\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_4\">\n",
       "     <g id=\"line2d_4\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m6d73d55cf4\" x=\"242.238764\" y=\"239.758125\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_4\">\n",
       "      <!-- 60 -->\n",
       "      <g transform=\"translate(235.876264 254.356562)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-36\" d=\"M 2113 2584 \n",
       "Q 1688 2584 1439 2293 \n",
       "Q 1191 2003 1191 1497 \n",
       "Q 1191 994 1439 701 \n",
       "Q 1688 409 2113 409 \n",
       "Q 2538 409 2786 701 \n",
       "Q 3034 994 3034 1497 \n",
       "Q 3034 2003 2786 2293 \n",
       "Q 2538 2584 2113 2584 \n",
       "z\n",
       "M 3366 4563 \n",
       "L 3366 3988 \n",
       "Q 3128 4100 2886 4159 \n",
       "Q 2644 4219 2406 4219 \n",
       "Q 1781 4219 1451 3797 \n",
       "Q 1122 3375 1075 2522 \n",
       "Q 1259 2794 1537 2939 \n",
       "Q 1816 3084 2150 3084 \n",
       "Q 2853 3084 3261 2657 \n",
       "Q 3669 2231 3669 1497 \n",
       "Q 3669 778 3244 343 \n",
       "Q 2819 -91 2113 -91 \n",
       "Q 1303 -91 875 529 \n",
       "Q 447 1150 447 2328 \n",
       "Q 447 3434 972 4092 \n",
       "Q 1497 4750 2381 4750 \n",
       "Q 2619 4750 2861 4703 \n",
       "Q 3103 4656 3366 4563 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-36\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_5\">\n",
       "     <g id=\"line2d_5\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m6d73d55cf4\" x=\"304.353792\" y=\"239.758125\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_5\">\n",
       "      <!-- 80 -->\n",
       "      <g transform=\"translate(297.991292 254.356562)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-38\" d=\"M 2034 2216 \n",
       "Q 1584 2216 1326 1975 \n",
       "Q 1069 1734 1069 1313 \n",
       "Q 1069 891 1326 650 \n",
       "Q 1584 409 2034 409 \n",
       "Q 2484 409 2743 651 \n",
       "Q 3003 894 3003 1313 \n",
       "Q 3003 1734 2745 1975 \n",
       "Q 2488 2216 2034 2216 \n",
       "z\n",
       "M 1403 2484 \n",
       "Q 997 2584 770 2862 \n",
       "Q 544 3141 544 3541 \n",
       "Q 544 4100 942 4425 \n",
       "Q 1341 4750 2034 4750 \n",
       "Q 2731 4750 3128 4425 \n",
       "Q 3525 4100 3525 3541 \n",
       "Q 3525 3141 3298 2862 \n",
       "Q 3072 2584 2669 2484 \n",
       "Q 3125 2378 3379 2068 \n",
       "Q 3634 1759 3634 1313 \n",
       "Q 3634 634 3220 271 \n",
       "Q 2806 -91 2034 -91 \n",
       "Q 1263 -91 848 271 \n",
       "Q 434 634 434 1313 \n",
       "Q 434 1759 690 2068 \n",
       "Q 947 2378 1403 2484 \n",
       "z\n",
       "M 1172 3481 \n",
       "Q 1172 3119 1398 2916 \n",
       "Q 1625 2713 2034 2713 \n",
       "Q 2441 2713 2670 2916 \n",
       "Q 2900 3119 2900 3481 \n",
       "Q 2900 3844 2670 4047 \n",
       "Q 2441 4250 2034 4250 \n",
       "Q 1625 4250 1398 4047 \n",
       "Q 1172 3844 1172 3481 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-38\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_6\">\n",
       "     <g id=\"line2d_6\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m6d73d55cf4\" x=\"366.46882\" y=\"239.758125\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_6\">\n",
       "      <!-- 100 -->\n",
       "      <g transform=\"translate(356.92507 254.356562)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-31\" d=\"M 794 531 \n",
       "L 1825 531 \n",
       "L 1825 4091 \n",
       "L 703 3866 \n",
       "L 703 4441 \n",
       "L 1819 4666 \n",
       "L 2450 4666 \n",
       "L 2450 531 \n",
       "L 3481 531 \n",
       "L 3481 0 \n",
       "L 794 0 \n",
       "L 794 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"127.246094\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_7\">\n",
       "     <!-- n -->\n",
       "     <g transform=\"translate(208.0125 268.034687)scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-6e\" d=\"M 3513 2113 \n",
       "L 3513 0 \n",
       "L 2938 0 \n",
       "L 2938 2094 \n",
       "Q 2938 2591 2744 2837 \n",
       "Q 2550 3084 2163 3084 \n",
       "Q 1697 3084 1428 2787 \n",
       "Q 1159 2491 1159 1978 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2956 \n",
       "Q 1366 3272 1645 3428 \n",
       "Q 1925 3584 2291 3584 \n",
       "Q 2894 3584 3203 3211 \n",
       "Q 3513 2838 3513 2113 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-6e\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_2\">\n",
       "    <g id=\"ytick_1\">\n",
       "     <g id=\"line2d_7\">\n",
       "      <defs>\n",
       "       <path id=\"m7f931192b1\" d=\"M 0 0 \n",
       "L -3.5 0 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#m7f931192b1\" x=\"43.78125\" y=\"233.457234\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_8\">\n",
       "      <!-- 0.0 -->\n",
       "      <g transform=\"translate(20.878125 237.256453)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-2e\" d=\"M 684 794 \n",
       "L 1344 794 \n",
       "L 1344 0 \n",
       "L 684 0 \n",
       "L 684 794 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_2\">\n",
       "     <g id=\"line2d_8\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m7f931192b1\" x=\"43.78125\" y=\"193.206139\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_9\">\n",
       "      <!-- 0.2 -->\n",
       "      <g transform=\"translate(20.878125 197.005358)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-32\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_3\">\n",
       "     <g id=\"line2d_9\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m7f931192b1\" x=\"43.78125\" y=\"152.955045\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_10\">\n",
       "      <!-- 0.4 -->\n",
       "      <g transform=\"translate(20.878125 156.754264)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-34\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_4\">\n",
       "     <g id=\"line2d_10\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m7f931192b1\" x=\"43.78125\" y=\"112.70395\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_11\">\n",
       "      <!-- 0.6 -->\n",
       "      <g transform=\"translate(20.878125 116.503169)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-36\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_5\">\n",
       "     <g id=\"line2d_11\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m7f931192b1\" x=\"43.78125\" y=\"72.452856\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_12\">\n",
       "      <!-- 0.8 -->\n",
       "      <g transform=\"translate(20.878125 76.252075)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-38\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_6\">\n",
       "     <g id=\"line2d_12\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#m7f931192b1\" x=\"43.78125\" y=\"32.201761\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_13\">\n",
       "      <!-- 1.0 -->\n",
       "      <g transform=\"translate(20.878125 36.00098)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_14\">\n",
       "     <!-- Degree of polarization -->\n",
       "     <g transform=\"translate(14.798438 186.629531)rotate(-90)scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-44\" d=\"M 1259 4147 \n",
       "L 1259 519 \n",
       "L 2022 519 \n",
       "Q 2988 519 3436 956 \n",
       "Q 3884 1394 3884 2338 \n",
       "Q 3884 3275 3436 3711 \n",
       "Q 2988 4147 2022 4147 \n",
       "L 1259 4147 \n",
       "z\n",
       "M 628 4666 \n",
       "L 1925 4666 \n",
       "Q 3281 4666 3915 4102 \n",
       "Q 4550 3538 4550 2338 \n",
       "Q 4550 1131 3912 565 \n",
       "Q 3275 0 1925 0 \n",
       "L 628 0 \n",
       "L 628 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-65\" d=\"M 3597 1894 \n",
       "L 3597 1613 \n",
       "L 953 1613 \n",
       "Q 991 1019 1311 708 \n",
       "Q 1631 397 2203 397 \n",
       "Q 2534 397 2845 478 \n",
       "Q 3156 559 3463 722 \n",
       "L 3463 178 \n",
       "Q 3153 47 2828 -22 \n",
       "Q 2503 -91 2169 -91 \n",
       "Q 1331 -91 842 396 \n",
       "Q 353 884 353 1716 \n",
       "Q 353 2575 817 3079 \n",
       "Q 1281 3584 2069 3584 \n",
       "Q 2775 3584 3186 3129 \n",
       "Q 3597 2675 3597 1894 \n",
       "z\n",
       "M 3022 2063 \n",
       "Q 3016 2534 2758 2815 \n",
       "Q 2500 3097 2075 3097 \n",
       "Q 1594 3097 1305 2825 \n",
       "Q 1016 2553 972 2059 \n",
       "L 3022 2063 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-67\" d=\"M 2906 1791 \n",
       "Q 2906 2416 2648 2759 \n",
       "Q 2391 3103 1925 3103 \n",
       "Q 1463 3103 1205 2759 \n",
       "Q 947 2416 947 1791 \n",
       "Q 947 1169 1205 825 \n",
       "Q 1463 481 1925 481 \n",
       "Q 2391 481 2648 825 \n",
       "Q 2906 1169 2906 1791 \n",
       "z\n",
       "M 3481 434 \n",
       "Q 3481 -459 3084 -895 \n",
       "Q 2688 -1331 1869 -1331 \n",
       "Q 1566 -1331 1297 -1286 \n",
       "Q 1028 -1241 775 -1147 \n",
       "L 775 -588 \n",
       "Q 1028 -725 1275 -790 \n",
       "Q 1522 -856 1778 -856 \n",
       "Q 2344 -856 2625 -561 \n",
       "Q 2906 -266 2906 331 \n",
       "L 2906 616 \n",
       "Q 2728 306 2450 153 \n",
       "Q 2172 0 1784 0 \n",
       "Q 1141 0 747 490 \n",
       "Q 353 981 353 1791 \n",
       "Q 353 2603 747 3093 \n",
       "Q 1141 3584 1784 3584 \n",
       "Q 2172 3584 2450 3431 \n",
       "Q 2728 3278 2906 2969 \n",
       "L 2906 3500 \n",
       "L 3481 3500 \n",
       "L 3481 434 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-72\" d=\"M 2631 2963 \n",
       "Q 2534 3019 2420 3045 \n",
       "Q 2306 3072 2169 3072 \n",
       "Q 1681 3072 1420 2755 \n",
       "Q 1159 2438 1159 1844 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2956 \n",
       "Q 1341 3275 1631 3429 \n",
       "Q 1922 3584 2338 3584 \n",
       "Q 2397 3584 2469 3576 \n",
       "Q 2541 3569 2628 3553 \n",
       "L 2631 2963 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-20\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-6f\" d=\"M 1959 3097 \n",
       "Q 1497 3097 1228 2736 \n",
       "Q 959 2375 959 1747 \n",
       "Q 959 1119 1226 758 \n",
       "Q 1494 397 1959 397 \n",
       "Q 2419 397 2687 759 \n",
       "Q 2956 1122 2956 1747 \n",
       "Q 2956 2369 2687 2733 \n",
       "Q 2419 3097 1959 3097 \n",
       "z\n",
       "M 1959 3584 \n",
       "Q 2709 3584 3137 3096 \n",
       "Q 3566 2609 3566 1747 \n",
       "Q 3566 888 3137 398 \n",
       "Q 2709 -91 1959 -91 \n",
       "Q 1206 -91 779 398 \n",
       "Q 353 888 353 1747 \n",
       "Q 353 2609 779 3096 \n",
       "Q 1206 3584 1959 3584 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-66\" d=\"M 2375 4863 \n",
       "L 2375 4384 \n",
       "L 1825 4384 \n",
       "Q 1516 4384 1395 4259 \n",
       "Q 1275 4134 1275 3809 \n",
       "L 1275 3500 \n",
       "L 2222 3500 \n",
       "L 2222 3053 \n",
       "L 1275 3053 \n",
       "L 1275 0 \n",
       "L 697 0 \n",
       "L 697 3053 \n",
       "L 147 3053 \n",
       "L 147 3500 \n",
       "L 697 3500 \n",
       "L 697 3744 \n",
       "Q 697 4328 969 4595 \n",
       "Q 1241 4863 1831 4863 \n",
       "L 2375 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-70\" d=\"M 1159 525 \n",
       "L 1159 -1331 \n",
       "L 581 -1331 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2969 \n",
       "Q 1341 3281 1617 3432 \n",
       "Q 1894 3584 2278 3584 \n",
       "Q 2916 3584 3314 3078 \n",
       "Q 3713 2572 3713 1747 \n",
       "Q 3713 922 3314 415 \n",
       "Q 2916 -91 2278 -91 \n",
       "Q 1894 -91 1617 61 \n",
       "Q 1341 213 1159 525 \n",
       "z\n",
       "M 3116 1747 \n",
       "Q 3116 2381 2855 2742 \n",
       "Q 2594 3103 2138 3103 \n",
       "Q 1681 3103 1420 2742 \n",
       "Q 1159 2381 1159 1747 \n",
       "Q 1159 1113 1420 752 \n",
       "Q 1681 391 2138 391 \n",
       "Q 2594 391 2855 752 \n",
       "Q 3116 1113 3116 1747 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-6c\" d=\"M 603 4863 \n",
       "L 1178 4863 \n",
       "L 1178 0 \n",
       "L 603 0 \n",
       "L 603 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-61\" d=\"M 2194 1759 \n",
       "Q 1497 1759 1228 1600 \n",
       "Q 959 1441 959 1056 \n",
       "Q 959 750 1161 570 \n",
       "Q 1363 391 1709 391 \n",
       "Q 2188 391 2477 730 \n",
       "Q 2766 1069 2766 1631 \n",
       "L 2766 1759 \n",
       "L 2194 1759 \n",
       "z\n",
       "M 3341 1997 \n",
       "L 3341 0 \n",
       "L 2766 0 \n",
       "L 2766 531 \n",
       "Q 2569 213 2275 61 \n",
       "Q 1981 -91 1556 -91 \n",
       "Q 1019 -91 701 211 \n",
       "Q 384 513 384 1019 \n",
       "Q 384 1609 779 1909 \n",
       "Q 1175 2209 1959 2209 \n",
       "L 2766 2209 \n",
       "L 2766 2266 \n",
       "Q 2766 2663 2505 2880 \n",
       "Q 2244 3097 1772 3097 \n",
       "Q 1472 3097 1187 3025 \n",
       "Q 903 2953 641 2809 \n",
       "L 641 3341 \n",
       "Q 956 3463 1253 3523 \n",
       "Q 1550 3584 1831 3584 \n",
       "Q 2591 3584 2966 3190 \n",
       "Q 3341 2797 3341 1997 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-69\" d=\"M 603 3500 \n",
       "L 1178 3500 \n",
       "L 1178 0 \n",
       "L 603 0 \n",
       "L 603 3500 \n",
       "z\n",
       "M 603 4863 \n",
       "L 1178 4863 \n",
       "L 1178 4134 \n",
       "L 603 4134 \n",
       "L 603 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-7a\" d=\"M 353 3500 \n",
       "L 3084 3500 \n",
       "L 3084 2975 \n",
       "L 922 459 \n",
       "L 3084 459 \n",
       "L 3084 0 \n",
       "L 275 0 \n",
       "L 275 525 \n",
       "L 2438 3041 \n",
       "L 353 3041 \n",
       "L 353 3500 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-74\" d=\"M 1172 4494 \n",
       "L 1172 3500 \n",
       "L 2356 3500 \n",
       "L 2356 3053 \n",
       "L 1172 3053 \n",
       "L 1172 1153 \n",
       "Q 1172 725 1289 603 \n",
       "Q 1406 481 1766 481 \n",
       "L 2356 481 \n",
       "L 2356 0 \n",
       "L 1766 0 \n",
       "Q 1100 0 847 248 \n",
       "Q 594 497 594 1153 \n",
       "L 594 3053 \n",
       "L 172 3053 \n",
       "L 172 3500 \n",
       "L 594 3500 \n",
       "L 594 4494 \n",
       "L 1172 4494 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-44\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"77.001953\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-67\" x=\"138.525391\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-72\" x=\"202.001953\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"240.865234\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"302.388672\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-20\" x=\"363.912109\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"395.699219\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-66\" x=\"456.880859\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-20\" x=\"492.085938\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-70\" x=\"523.873047\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"587.349609\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6c\" x=\"648.53125\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-61\" x=\"676.314453\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-72\" x=\"737.59375\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-69\" x=\"778.707031\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-7a\" x=\"806.490234\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-61\" x=\"858.980469\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-74\" x=\"920.259766\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-69\" x=\"959.46875\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"987.251953\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6e\" x=\"1048.433594\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"line2d_13\">\n",
       "    <path d=\"M 58.999432 32.201761 \n",
       "L 62.105183 80.32259 \n",
       "L 65.210935 86.385368 \n",
       "L 68.316686 162.536431 \n",
       "L 71.422437 194.939465 \n",
       "L 74.528189 168.309757 \n",
       "L 77.63394 135.027766 \n",
       "L 80.739692 163.147713 \n",
       "L 83.845443 128.828844 \n",
       "L 86.951194 171.394941 \n",
       "L 90.056946 173.212025 \n",
       "L 93.162697 197.198146 \n",
       "L 96.268449 168.163158 \n",
       "L 99.3742 142.364375 \n",
       "L 102.479951 142.058629 \n",
       "L 105.585703 162.093239 \n",
       "L 108.691454 196.194368 \n",
       "L 111.797205 144.157473 \n",
       "L 114.902957 181.867086 \n",
       "L 118.008708 187.753386 \n",
       "L 121.11446 193.90583 \n",
       "L 124.220211 140.57841 \n",
       "L 127.325962 176.193642 \n",
       "L 130.431714 202.040704 \n",
       "L 133.537465 185.477721 \n",
       "L 136.643217 177.920139 \n",
       "L 139.748968 183.548267 \n",
       "L 142.854719 201.881292 \n",
       "L 145.960471 207.898958 \n",
       "L 149.066222 167.076369 \n",
       "L 152.171974 174.724203 \n",
       "L 155.277725 181.814317 \n",
       "L 158.383476 173.687532 \n",
       "L 161.489228 213.643296 \n",
       "L 164.594979 222.948087 \n",
       "L 167.700731 183.760972 \n",
       "L 170.806482 193.510528 \n",
       "L 173.912233 188.17633 \n",
       "L 177.017985 206.143175 \n",
       "L 180.123736 204.292918 \n",
       "L 183.229487 206.387714 \n",
       "L 186.335239 181.703665 \n",
       "L 189.44099 175.228903 \n",
       "L 192.546742 187.491994 \n",
       "L 195.652493 198.522072 \n",
       "L 198.758244 175.815698 \n",
       "L 201.863996 212.859008 \n",
       "L 204.969747 186.710956 \n",
       "L 208.075499 186.089035 \n",
       "L 211.18125 211.97722 \n",
       "L 214.287001 203.587331 \n",
       "L 217.392753 204.274485 \n",
       "L 220.498504 224.826004 \n",
       "L 223.604256 201.00353 \n",
       "L 226.710007 205.759964 \n",
       "L 229.815758 181.757074 \n",
       "L 232.92151 200.655769 \n",
       "L 236.027261 218.074746 \n",
       "L 239.133013 205.507458 \n",
       "L 242.238764 204.852165 \n",
       "L 245.344515 210.397025 \n",
       "L 248.450267 181.977645 \n",
       "L 251.556018 186.614934 \n",
       "L 254.661769 206.236286 \n",
       "L 257.767521 203.71438 \n",
       "L 260.873272 211.24248 \n",
       "L 263.979024 208.484158 \n",
       "L 267.084775 195.659335 \n",
       "L 270.190526 198.390568 \n",
       "L 273.296278 217.035329 \n",
       "L 276.402029 216.264234 \n",
       "L 279.507781 199.518139 \n",
       "L 282.613532 191.308329 \n",
       "L 285.719283 227.176979 \n",
       "L 288.825035 205.560978 \n",
       "L 291.930786 201.265804 \n",
       "L 295.036538 211.091985 \n",
       "L 298.142289 197.111425 \n",
       "L 301.24804 210.950536 \n",
       "L 304.353792 198.618153 \n",
       "L 307.459543 201.983429 \n",
       "L 310.565295 194.049738 \n",
       "L 313.671046 202.316319 \n",
       "L 316.776797 182.541248 \n",
       "L 319.882549 222.6894 \n",
       "L 322.9883 210.938642 \n",
       "L 326.094051 213.541662 \n",
       "L 329.199803 210.296211 \n",
       "L 332.305554 206.177962 \n",
       "L 335.411306 215.092637 \n",
       "L 338.517057 219.250655 \n",
       "L 341.622808 198.336414 \n",
       "L 344.72856 210.514171 \n",
       "L 347.834311 216.577181 \n",
       "L 350.940063 215.004383 \n",
       "L 354.045814 229.874489 \n",
       "L 357.151565 205.100413 \n",
       "L 360.257317 199.370589 \n",
       "L 363.363068 207.201832 \n",
       "\" clip-path=\"url(#p4b4f3e8909)\" style=\"fill: none; stroke: #1f77b4; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path d=\"M 43.78125 239.758125 \n",
       "L 43.78125 22.318125 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path d=\"M 378.58125 239.758125 \n",
       "L 378.58125 22.318125 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path d=\"M 43.78125 239.758125 \n",
       "L 378.58125 239.758125 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path d=\"M 43.78125 22.318125 \n",
       "L 378.58125 22.318125 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"text_15\">\n",
       "    <!-- Degree of polarization vs. number of Jones-Stokes vectors -->\n",
       "    <g transform=\"translate(36.8625 16.318125)scale(0.12 -0.12)\">\n",
       "     <defs>\n",
       "      <path id=\"DejaVuSans-76\" d=\"M 191 3500 \n",
       "L 800 3500 \n",
       "L 1894 563 \n",
       "L 2988 3500 \n",
       "L 3597 3500 \n",
       "L 2284 0 \n",
       "L 1503 0 \n",
       "L 191 3500 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-73\" d=\"M 2834 3397 \n",
       "L 2834 2853 \n",
       "Q 2591 2978 2328 3040 \n",
       "Q 2066 3103 1784 3103 \n",
       "Q 1356 3103 1142 2972 \n",
       "Q 928 2841 928 2578 \n",
       "Q 928 2378 1081 2264 \n",
       "Q 1234 2150 1697 2047 \n",
       "L 1894 2003 \n",
       "Q 2506 1872 2764 1633 \n",
       "Q 3022 1394 3022 966 \n",
       "Q 3022 478 2636 193 \n",
       "Q 2250 -91 1575 -91 \n",
       "Q 1294 -91 989 -36 \n",
       "Q 684 19 347 128 \n",
       "L 347 722 \n",
       "Q 666 556 975 473 \n",
       "Q 1284 391 1588 391 \n",
       "Q 1994 391 2212 530 \n",
       "Q 2431 669 2431 922 \n",
       "Q 2431 1156 2273 1281 \n",
       "Q 2116 1406 1581 1522 \n",
       "L 1381 1569 \n",
       "Q 847 1681 609 1914 \n",
       "Q 372 2147 372 2553 \n",
       "Q 372 3047 722 3315 \n",
       "Q 1072 3584 1716 3584 \n",
       "Q 2034 3584 2315 3537 \n",
       "Q 2597 3491 2834 3397 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-75\" d=\"M 544 1381 \n",
       "L 544 3500 \n",
       "L 1119 3500 \n",
       "L 1119 1403 \n",
       "Q 1119 906 1312 657 \n",
       "Q 1506 409 1894 409 \n",
       "Q 2359 409 2629 706 \n",
       "Q 2900 1003 2900 1516 \n",
       "L 2900 3500 \n",
       "L 3475 3500 \n",
       "L 3475 0 \n",
       "L 2900 0 \n",
       "L 2900 538 \n",
       "Q 2691 219 2414 64 \n",
       "Q 2138 -91 1772 -91 \n",
       "Q 1169 -91 856 284 \n",
       "Q 544 659 544 1381 \n",
       "z\n",
       "M 1991 3584 \n",
       "L 1991 3584 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-6d\" d=\"M 3328 2828 \n",
       "Q 3544 3216 3844 3400 \n",
       "Q 4144 3584 4550 3584 \n",
       "Q 5097 3584 5394 3201 \n",
       "Q 5691 2819 5691 2113 \n",
       "L 5691 0 \n",
       "L 5113 0 \n",
       "L 5113 2094 \n",
       "Q 5113 2597 4934 2840 \n",
       "Q 4756 3084 4391 3084 \n",
       "Q 3944 3084 3684 2787 \n",
       "Q 3425 2491 3425 1978 \n",
       "L 3425 0 \n",
       "L 2847 0 \n",
       "L 2847 2094 \n",
       "Q 2847 2600 2669 2842 \n",
       "Q 2491 3084 2119 3084 \n",
       "Q 1678 3084 1418 2786 \n",
       "Q 1159 2488 1159 1978 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2956 \n",
       "Q 1356 3278 1631 3431 \n",
       "Q 1906 3584 2284 3584 \n",
       "Q 2666 3584 2933 3390 \n",
       "Q 3200 3197 3328 2828 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-62\" d=\"M 3116 1747 \n",
       "Q 3116 2381 2855 2742 \n",
       "Q 2594 3103 2138 3103 \n",
       "Q 1681 3103 1420 2742 \n",
       "Q 1159 2381 1159 1747 \n",
       "Q 1159 1113 1420 752 \n",
       "Q 1681 391 2138 391 \n",
       "Q 2594 391 2855 752 \n",
       "Q 3116 1113 3116 1747 \n",
       "z\n",
       "M 1159 2969 \n",
       "Q 1341 3281 1617 3432 \n",
       "Q 1894 3584 2278 3584 \n",
       "Q 2916 3584 3314 3078 \n",
       "Q 3713 2572 3713 1747 \n",
       "Q 3713 922 3314 415 \n",
       "Q 2916 -91 2278 -91 \n",
       "Q 1894 -91 1617 61 \n",
       "Q 1341 213 1159 525 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 4863 \n",
       "L 1159 4863 \n",
       "L 1159 2969 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-4a\" d=\"M 628 4666 \n",
       "L 1259 4666 \n",
       "L 1259 325 \n",
       "Q 1259 -519 939 -900 \n",
       "Q 619 -1281 -91 -1281 \n",
       "L -331 -1281 \n",
       "L -331 -750 \n",
       "L -134 -750 \n",
       "Q 284 -750 456 -515 \n",
       "Q 628 -281 628 325 \n",
       "L 628 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-2d\" d=\"M 313 2009 \n",
       "L 1997 2009 \n",
       "L 1997 1497 \n",
       "L 313 1497 \n",
       "L 313 2009 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-53\" d=\"M 3425 4513 \n",
       "L 3425 3897 \n",
       "Q 3066 4069 2747 4153 \n",
       "Q 2428 4238 2131 4238 \n",
       "Q 1616 4238 1336 4038 \n",
       "Q 1056 3838 1056 3469 \n",
       "Q 1056 3159 1242 3001 \n",
       "Q 1428 2844 1947 2747 \n",
       "L 2328 2669 \n",
       "Q 3034 2534 3370 2195 \n",
       "Q 3706 1856 3706 1288 \n",
       "Q 3706 609 3251 259 \n",
       "Q 2797 -91 1919 -91 \n",
       "Q 1588 -91 1214 -16 \n",
       "Q 841 59 441 206 \n",
       "L 441 856 \n",
       "Q 825 641 1194 531 \n",
       "Q 1563 422 1919 422 \n",
       "Q 2459 422 2753 634 \n",
       "Q 3047 847 3047 1241 \n",
       "Q 3047 1584 2836 1778 \n",
       "Q 2625 1972 2144 2069 \n",
       "L 1759 2144 \n",
       "Q 1053 2284 737 2584 \n",
       "Q 422 2884 422 3419 \n",
       "Q 422 4038 858 4394 \n",
       "Q 1294 4750 2059 4750 \n",
       "Q 2388 4750 2728 4690 \n",
       "Q 3069 4631 3425 4513 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-6b\" d=\"M 581 4863 \n",
       "L 1159 4863 \n",
       "L 1159 1991 \n",
       "L 2875 3500 \n",
       "L 3609 3500 \n",
       "L 1753 1863 \n",
       "L 3688 0 \n",
       "L 2938 0 \n",
       "L 1159 1709 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      <path id=\"DejaVuSans-63\" d=\"M 3122 3366 \n",
       "L 3122 2828 \n",
       "Q 2878 2963 2633 3030 \n",
       "Q 2388 3097 2138 3097 \n",
       "Q 1578 3097 1268 2742 \n",
       "Q 959 2388 959 1747 \n",
       "Q 959 1106 1268 751 \n",
       "Q 1578 397 2138 397 \n",
       "Q 2388 397 2633 464 \n",
       "Q 2878 531 3122 666 \n",
       "L 3122 134 \n",
       "Q 2881 22 2623 -34 \n",
       "Q 2366 -91 2075 -91 \n",
       "Q 1284 -91 818 406 \n",
       "Q 353 903 353 1747 \n",
       "Q 353 2603 823 3093 \n",
       "Q 1294 3584 2113 3584 \n",
       "Q 2378 3584 2631 3529 \n",
       "Q 2884 3475 3122 3366 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "     </defs>\n",
       "     <use xlink:href=\"#DejaVuSans-44\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-65\" x=\"77.001953\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-67\" x=\"138.525391\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-72\" x=\"202.001953\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-65\" x=\"240.865234\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-65\" x=\"302.388672\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-20\" x=\"363.912109\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6f\" x=\"395.699219\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-66\" x=\"456.880859\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-20\" x=\"492.085938\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-70\" x=\"523.873047\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6f\" x=\"587.349609\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6c\" x=\"648.53125\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-61\" x=\"676.314453\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-72\" x=\"737.59375\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-69\" x=\"778.707031\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-7a\" x=\"806.490234\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-61\" x=\"858.980469\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-74\" x=\"920.259766\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-69\" x=\"959.46875\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6f\" x=\"987.251953\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6e\" x=\"1048.433594\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-20\" x=\"1111.8125\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-76\" x=\"1143.599609\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-73\" x=\"1202.779297\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-2e\" x=\"1254.878906\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-20\" x=\"1286.666016\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6e\" x=\"1318.453125\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-75\" x=\"1381.832031\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6d\" x=\"1445.210938\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-62\" x=\"1542.623047\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-65\" x=\"1606.099609\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-72\" x=\"1667.623047\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-20\" x=\"1708.736328\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6f\" x=\"1740.523438\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-66\" x=\"1801.705078\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-20\" x=\"1836.910156\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-4a\" x=\"1868.697266\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6f\" x=\"1898.189453\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6e\" x=\"1959.371094\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-65\" x=\"2022.75\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-73\" x=\"2084.273438\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-2d\" x=\"2136.373047\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-53\" x=\"2172.457031\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-74\" x=\"2235.933594\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6f\" x=\"2275.142578\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6b\" x=\"2336.324219\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-65\" x=\"2390.609375\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-73\" x=\"2452.132812\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-20\" x=\"2504.232422\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-76\" x=\"2536.019531\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-65\" x=\"2595.199219\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-63\" x=\"2656.722656\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-74\" x=\"2711.703125\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-6f\" x=\"2750.912109\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-72\" x=\"2812.09375\"/>\n",
       "     <use xlink:href=\"#DejaVuSans-73\" x=\"2853.207031\"/>\n",
       "    </g>\n",
       "   </g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p4b4f3e8909\">\n",
       "   <rect x=\"43.78125\" y=\"22.318125\" width=\"334.8\" height=\"217.44\"/>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def RandomStokesVector(n):\n",
    "    ranc = lambda : (random.gauss(0,1) + random.gauss(0,1)*1j)/2\n",
    "    return sum([JonesStokes([ranc(),ranc()]) for i in range(n)])/n\n",
    "\n",
    "plt.figure()\n",
    "plt.plot(range(1,100),[RandomStokesVector(i).DOP() for i in range(1,100)])\n",
    "plt.title(\"Degree of polarization vs. number of Jones-Stokes vectors\")\n",
    "plt.xlabel(\"n\")\n",
    "plt.ylabel(\"Degree of polarization\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can multiply Mueller matrices and Stokes vectors. You can use the `@` or `*` operators or the `dot()` function to multiply the objects. If a Stokes vector multiplies a Mueller matrix from the left, it is assumed to be transposed first. The product of two Stokes vectors is the inner product, a scalar. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "m1 = \n",
      " [[ 0.94335668 -0.16250793  0.46915549 -0.14212114]\n",
      " [-0.23542067  0.62314123 -0.18648852 -0.05825565]\n",
      " [-0.01326436 -0.06702373  0.02740091 -0.4182326 ]\n",
      " [ 0.37937625 -0.06489837  0.54109253  0.07621696]]\n",
      "m2 = \n",
      " [[ 0.90393586  0.42883859  0.05893816 -0.0398583 ]\n",
      " [-0.03255312 -0.05484299  0.28021642  0.20824843]\n",
      " [ 0.17437584  0.3752689  -0.03803409  0.08744445]\n",
      " [ 0.35288836  0.34723155  0.26526746 -0.43082467]]\n",
      "s1 =  StokesVector(1.2205852882966242,-0.07508395251618234,0.8002605801487375,-0.2529729329906206)\n",
      "s2 =  StokesVector(1.5964694635032322,-0.2407997868272278,0.5994372371241194,-0.8510075390636394)\n",
      "m1 * s1 =  StokesVector(1.5750484699343372,-0.46864121761363126,0.11657152710872415,0.8816680960253582)\n",
      "m1 @ s1 =  StokesVector(1.5750484699343372,-0.46864121761363126,0.11657152710872415,0.8816680960253582)\n",
      "m1.dot(s1) =  [ 1.57504847 -0.46864122  0.11657153  0.8816681 ]\n",
      "m1 @ m2 =  [[ 0.88968056  0.54017069 -0.0454817   0.03081172]\n",
      " [-0.28616721 -0.22534394  0.15237873  0.14794223]\n",
      " [-0.15261965 -0.13695333 -0.13154859  0.16915209]\n",
      " [ 0.46629398  0.39577053  0.00381207 -0.01415688]]\n",
      "s1 @ m1 =  StokesVector(1.062536738150666,-0.2823616179668839,0.4716926877767631,-0.5230727916610801)\n",
      "s1 @ s2 =  2.661695204424655\n"
     ]
    }
   ],
   "source": [
    "m1 = RandomMuellerMatrix(4)\n",
    "m2 = RandomMuellerMatrix(4)\n",
    "s1 = RandomStokesVector(4)\n",
    "s2 = RandomStokesVector(4)\n",
    "print(\"m1 = \\n\",m1)\n",
    "print(\"m2 = \\n\",m2)\n",
    "print(\"s1 = \",s1)\n",
    "print(\"s2 = \",s2)\n",
    "print(\"m1 * s1 = \",m1 * s1)\n",
    "print(\"m1 @ s1 = \",m1 * s1)\n",
    "print(\"m1.dot(s1) = \",m1.dot(s1))\n",
    "print(\"m1 @ m2 = \",m1 * m2)\n",
    "print(\"s1 @ m1 = \",s1 * m1)\n",
    "print(\"s1 @ s2 = \",s1 * s2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Mueller matrix decompositions\n",
    "--------------------------------\n",
    "\n",
    "So, now that we can create some physically valid Mueller matrices, we can explore some decompositions. The Cloude decomposition* decomposes a Mueller matrix into an incoherent, positive (convex) sum of Jones-Mueller matrices. \n",
    "\n",
    "*S. R. Cloude, “Group theory and polarization algebra,” Optik (Stuttgart) **75**, 26–36 (1986)\n",
    "and S. R. Cloude and E. Pottier, “A review of target decomposition theorems in radar polarimetry,” IEEE Trans.\n",
    "Geosci. and Remote Sensing 34, 498–518 (1996)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "M = \n",
      "\n",
      " [[ 0.97198146  0.30841196 -0.13263167  0.11331983]\n",
      " [-0.01312405  0.05122653  0.24274521  0.03582365]\n",
      " [-0.14679568  0.04987054 -0.08064983 -0.34434852]\n",
      " [-0.09716448 -0.16663341 -0.09086824  0.40486368]] \n",
      "\n",
      "Cloude decomposition =\n",
      "\n",
      "[[ 0.49815716  0.23393238 -0.05659197  0.11395561]\n",
      " [-0.07926307 -0.06762069  0.42302718  0.00239692]\n",
      " [-0.22600176 -0.30168327 -0.00377822 -0.37053662]\n",
      " [-0.11641932 -0.36930565 -0.03852329  0.2300661 ]] \n",
      "\n",
      "[[ 0.31877226  0.15566403 -0.09501666  0.02225629]\n",
      " [ 0.10148151  0.03766427 -0.2769091   0.00788727]\n",
      " [ 0.13742785  0.28393391 -0.01393898 -0.07703643]\n",
      " [ 0.06760094  0.10027555 -0.0040224   0.2497188 ]] \n",
      "\n",
      "[[ 0.15220157 -0.07995128  0.01814329 -0.02246167]\n",
      " [-0.03555445  0.08268129  0.09841471  0.02611275]\n",
      " [-0.05939849  0.06973868 -0.06428279  0.10233195]\n",
      " [-0.04933165  0.10311127 -0.04950611 -0.07273397]] \n",
      "\n",
      "[[ 0.00285046 -0.00123317  0.00083367 -0.0004304 ]\n",
      " [ 0.00021197 -0.00149834 -0.00178758 -0.00057329]\n",
      " [ 0.00117673 -0.00211878  0.00135016  0.00089258]\n",
      " [ 0.00098556 -0.00071458  0.00118356 -0.00218725]] \n",
      "\n",
      "Purity1 = 0.18455587955678526\n",
      "Purity2 = 0.527300463403825\n",
      "Purity3 = 0.9882694784032228\n"
     ]
    }
   ],
   "source": [
    "M = RandomMuellerMatrix(4)\n",
    "MCD = M.Cloude_Decomposition()\n",
    "print(\"M = \\n\\n\",M,\"\\n\\nCloude decomposition =\\n\")\n",
    "for m in MCD:\n",
    "    print(m,\"\\n\")\n",
    "    \n",
    "print(f\"Purity1 = {(MCD[0][0,0]-MCD[1][0,0])/M[0,0]}\")\n",
    "print(f\"Purity2 = {(MCD[0][0,0]+MCD[1][0,0]-2*MCD[2][0,0])/M[0,0]}\")\n",
    "print(f\"Purity3 = {(MCD[0][0,0]+MCD[1][0,0]+MCD[2][0,0]-3*MCD[3][0,0])/M[0,0]}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that if we create the random Mueller matrix from less than four Jones-Mueller matrices, the Cloude decomposition will have only as many non-zero matrices as there were Jones-Mueller matrices. In the following, we plot the average magnitude of each element of the Cloude decomposition as a function of how many Jones-Mueller matrices were added."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"386.318321pt\" height=\"262.19625pt\" viewBox=\"0 0 386.318321 262.19625\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n",
       " <metadata>\n",
       "  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n",
       "   <cc:Work>\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n",
       "    <dc:date>2023-03-02T13:11:30.593692</dc:date>\n",
       "    <dc:format>image/svg+xml</dc:format>\n",
       "    <dc:creator>\n",
       "     <cc:Agent>\n",
       "      <dc:title>Matplotlib v3.5.2, https://matplotlib.org/</dc:title>\n",
       "     </cc:Agent>\n",
       "    </dc:creator>\n",
       "   </cc:Work>\n",
       "  </rdf:RDF>\n",
       " </metadata>\n",
       " <defs>\n",
       "  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <g id=\"patch_1\">\n",
       "   <path d=\"M 0 262.19625 \n",
       "L 386.318321 262.19625 \n",
       "L 386.318321 0 \n",
       "L 0 0 \n",
       "L 0 262.19625 \n",
       "z\n",
       "\" style=\"fill: none\"/>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path d=\"M 43.78125 224.64 \n",
       "L 378.58125 224.64 \n",
       "L 378.58125 7.2 \n",
       "L 43.78125 7.2 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\">\n",
       "    <g id=\"xtick_1\">\n",
       "     <g id=\"line2d_1\">\n",
       "      <defs>\n",
       "       <path id=\"me9945f8f14\" d=\"M 0 0 \n",
       "L 0 3.5 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#me9945f8f14\" x=\"58.999432\" y=\"224.64\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_1\">\n",
       "      <!-- 0 -->\n",
       "      <g transform=\"translate(55.818182 239.238437)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-30\" d=\"M 2034 4250 \n",
       "Q 1547 4250 1301 3770 \n",
       "Q 1056 3291 1056 2328 \n",
       "Q 1056 1369 1301 889 \n",
       "Q 1547 409 2034 409 \n",
       "Q 2525 409 2770 889 \n",
       "Q 3016 1369 3016 2328 \n",
       "Q 3016 3291 2770 3770 \n",
       "Q 2525 4250 2034 4250 \n",
       "z\n",
       "M 2034 4750 \n",
       "Q 2819 4750 3233 4129 \n",
       "Q 3647 3509 3647 2328 \n",
       "Q 3647 1150 3233 529 \n",
       "Q 2819 -91 2034 -91 \n",
       "Q 1250 -91 836 529 \n",
       "Q 422 1150 422 2328 \n",
       "Q 422 3509 836 4129 \n",
       "Q 1250 4750 2034 4750 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_2\">\n",
       "     <g id=\"line2d_2\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#me9945f8f14\" x=\"121.11446\" y=\"224.64\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_2\">\n",
       "      <!-- 20 -->\n",
       "      <g transform=\"translate(114.75196 239.238437)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-32\" d=\"M 1228 531 \n",
       "L 3431 531 \n",
       "L 3431 0 \n",
       "L 469 0 \n",
       "L 469 531 \n",
       "Q 828 903 1448 1529 \n",
       "Q 2069 2156 2228 2338 \n",
       "Q 2531 2678 2651 2914 \n",
       "Q 2772 3150 2772 3378 \n",
       "Q 2772 3750 2511 3984 \n",
       "Q 2250 4219 1831 4219 \n",
       "Q 1534 4219 1204 4116 \n",
       "Q 875 4013 500 3803 \n",
       "L 500 4441 \n",
       "Q 881 4594 1212 4672 \n",
       "Q 1544 4750 1819 4750 \n",
       "Q 2544 4750 2975 4387 \n",
       "Q 3406 4025 3406 3419 \n",
       "Q 3406 3131 3298 2873 \n",
       "Q 3191 2616 2906 2266 \n",
       "Q 2828 2175 2409 1742 \n",
       "Q 1991 1309 1228 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-32\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_3\">\n",
       "     <g id=\"line2d_3\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#me9945f8f14\" x=\"183.229487\" y=\"224.64\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_3\">\n",
       "      <!-- 40 -->\n",
       "      <g transform=\"translate(176.866987 239.238437)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-34\" d=\"M 2419 4116 \n",
       "L 825 1625 \n",
       "L 2419 1625 \n",
       "L 2419 4116 \n",
       "z\n",
       "M 2253 4666 \n",
       "L 3047 4666 \n",
       "L 3047 1625 \n",
       "L 3713 1625 \n",
       "L 3713 1100 \n",
       "L 3047 1100 \n",
       "L 3047 0 \n",
       "L 2419 0 \n",
       "L 2419 1100 \n",
       "L 313 1100 \n",
       "L 313 1709 \n",
       "L 2253 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-34\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_4\">\n",
       "     <g id=\"line2d_4\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#me9945f8f14\" x=\"245.344515\" y=\"224.64\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_4\">\n",
       "      <!-- 60 -->\n",
       "      <g transform=\"translate(238.982015 239.238437)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-36\" d=\"M 2113 2584 \n",
       "Q 1688 2584 1439 2293 \n",
       "Q 1191 2003 1191 1497 \n",
       "Q 1191 994 1439 701 \n",
       "Q 1688 409 2113 409 \n",
       "Q 2538 409 2786 701 \n",
       "Q 3034 994 3034 1497 \n",
       "Q 3034 2003 2786 2293 \n",
       "Q 2538 2584 2113 2584 \n",
       "z\n",
       "M 3366 4563 \n",
       "L 3366 3988 \n",
       "Q 3128 4100 2886 4159 \n",
       "Q 2644 4219 2406 4219 \n",
       "Q 1781 4219 1451 3797 \n",
       "Q 1122 3375 1075 2522 \n",
       "Q 1259 2794 1537 2939 \n",
       "Q 1816 3084 2150 3084 \n",
       "Q 2853 3084 3261 2657 \n",
       "Q 3669 2231 3669 1497 \n",
       "Q 3669 778 3244 343 \n",
       "Q 2819 -91 2113 -91 \n",
       "Q 1303 -91 875 529 \n",
       "Q 447 1150 447 2328 \n",
       "Q 447 3434 972 4092 \n",
       "Q 1497 4750 2381 4750 \n",
       "Q 2619 4750 2861 4703 \n",
       "Q 3103 4656 3366 4563 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-36\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_5\">\n",
       "     <g id=\"line2d_5\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#me9945f8f14\" x=\"307.459543\" y=\"224.64\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_5\">\n",
       "      <!-- 80 -->\n",
       "      <g transform=\"translate(301.097043 239.238437)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-38\" d=\"M 2034 2216 \n",
       "Q 1584 2216 1326 1975 \n",
       "Q 1069 1734 1069 1313 \n",
       "Q 1069 891 1326 650 \n",
       "Q 1584 409 2034 409 \n",
       "Q 2484 409 2743 651 \n",
       "Q 3003 894 3003 1313 \n",
       "Q 3003 1734 2745 1975 \n",
       "Q 2488 2216 2034 2216 \n",
       "z\n",
       "M 1403 2484 \n",
       "Q 997 2584 770 2862 \n",
       "Q 544 3141 544 3541 \n",
       "Q 544 4100 942 4425 \n",
       "Q 1341 4750 2034 4750 \n",
       "Q 2731 4750 3128 4425 \n",
       "Q 3525 4100 3525 3541 \n",
       "Q 3525 3141 3298 2862 \n",
       "Q 3072 2584 2669 2484 \n",
       "Q 3125 2378 3379 2068 \n",
       "Q 3634 1759 3634 1313 \n",
       "Q 3634 634 3220 271 \n",
       "Q 2806 -91 2034 -91 \n",
       "Q 1263 -91 848 271 \n",
       "Q 434 634 434 1313 \n",
       "Q 434 1759 690 2068 \n",
       "Q 947 2378 1403 2484 \n",
       "z\n",
       "M 1172 3481 \n",
       "Q 1172 3119 1398 2916 \n",
       "Q 1625 2713 2034 2713 \n",
       "Q 2441 2713 2670 2916 \n",
       "Q 2900 3119 2900 3481 \n",
       "Q 2900 3844 2670 4047 \n",
       "Q 2441 4250 2034 4250 \n",
       "Q 1625 4250 1398 4047 \n",
       "Q 1172 3844 1172 3481 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-38\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_6\">\n",
       "     <g id=\"line2d_6\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#me9945f8f14\" x=\"369.574571\" y=\"224.64\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_6\">\n",
       "      <!-- 100 -->\n",
       "      <g transform=\"translate(360.030821 239.238437)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-31\" d=\"M 794 531 \n",
       "L 1825 531 \n",
       "L 1825 4091 \n",
       "L 703 3866 \n",
       "L 703 4441 \n",
       "L 1819 4666 \n",
       "L 2450 4666 \n",
       "L 2450 531 \n",
       "L 3481 531 \n",
       "L 3481 0 \n",
       "L 794 0 \n",
       "L 794 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"127.246094\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_7\">\n",
       "     <!-- Number of Jones-Mueller matrices averaged -->\n",
       "     <g transform=\"translate(100.847656 252.916562)scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-4e\" d=\"M 628 4666 \n",
       "L 1478 4666 \n",
       "L 3547 763 \n",
       "L 3547 4666 \n",
       "L 4159 4666 \n",
       "L 4159 0 \n",
       "L 3309 0 \n",
       "L 1241 3903 \n",
       "L 1241 0 \n",
       "L 628 0 \n",
       "L 628 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-75\" d=\"M 544 1381 \n",
       "L 544 3500 \n",
       "L 1119 3500 \n",
       "L 1119 1403 \n",
       "Q 1119 906 1312 657 \n",
       "Q 1506 409 1894 409 \n",
       "Q 2359 409 2629 706 \n",
       "Q 2900 1003 2900 1516 \n",
       "L 2900 3500 \n",
       "L 3475 3500 \n",
       "L 3475 0 \n",
       "L 2900 0 \n",
       "L 2900 538 \n",
       "Q 2691 219 2414 64 \n",
       "Q 2138 -91 1772 -91 \n",
       "Q 1169 -91 856 284 \n",
       "Q 544 659 544 1381 \n",
       "z\n",
       "M 1991 3584 \n",
       "L 1991 3584 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-6d\" d=\"M 3328 2828 \n",
       "Q 3544 3216 3844 3400 \n",
       "Q 4144 3584 4550 3584 \n",
       "Q 5097 3584 5394 3201 \n",
       "Q 5691 2819 5691 2113 \n",
       "L 5691 0 \n",
       "L 5113 0 \n",
       "L 5113 2094 \n",
       "Q 5113 2597 4934 2840 \n",
       "Q 4756 3084 4391 3084 \n",
       "Q 3944 3084 3684 2787 \n",
       "Q 3425 2491 3425 1978 \n",
       "L 3425 0 \n",
       "L 2847 0 \n",
       "L 2847 2094 \n",
       "Q 2847 2600 2669 2842 \n",
       "Q 2491 3084 2119 3084 \n",
       "Q 1678 3084 1418 2786 \n",
       "Q 1159 2488 1159 1978 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2956 \n",
       "Q 1356 3278 1631 3431 \n",
       "Q 1906 3584 2284 3584 \n",
       "Q 2666 3584 2933 3390 \n",
       "Q 3200 3197 3328 2828 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-62\" d=\"M 3116 1747 \n",
       "Q 3116 2381 2855 2742 \n",
       "Q 2594 3103 2138 3103 \n",
       "Q 1681 3103 1420 2742 \n",
       "Q 1159 2381 1159 1747 \n",
       "Q 1159 1113 1420 752 \n",
       "Q 1681 391 2138 391 \n",
       "Q 2594 391 2855 752 \n",
       "Q 3116 1113 3116 1747 \n",
       "z\n",
       "M 1159 2969 \n",
       "Q 1341 3281 1617 3432 \n",
       "Q 1894 3584 2278 3584 \n",
       "Q 2916 3584 3314 3078 \n",
       "Q 3713 2572 3713 1747 \n",
       "Q 3713 922 3314 415 \n",
       "Q 2916 -91 2278 -91 \n",
       "Q 1894 -91 1617 61 \n",
       "Q 1341 213 1159 525 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 4863 \n",
       "L 1159 4863 \n",
       "L 1159 2969 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-65\" d=\"M 3597 1894 \n",
       "L 3597 1613 \n",
       "L 953 1613 \n",
       "Q 991 1019 1311 708 \n",
       "Q 1631 397 2203 397 \n",
       "Q 2534 397 2845 478 \n",
       "Q 3156 559 3463 722 \n",
       "L 3463 178 \n",
       "Q 3153 47 2828 -22 \n",
       "Q 2503 -91 2169 -91 \n",
       "Q 1331 -91 842 396 \n",
       "Q 353 884 353 1716 \n",
       "Q 353 2575 817 3079 \n",
       "Q 1281 3584 2069 3584 \n",
       "Q 2775 3584 3186 3129 \n",
       "Q 3597 2675 3597 1894 \n",
       "z\n",
       "M 3022 2063 \n",
       "Q 3016 2534 2758 2815 \n",
       "Q 2500 3097 2075 3097 \n",
       "Q 1594 3097 1305 2825 \n",
       "Q 1016 2553 972 2059 \n",
       "L 3022 2063 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-72\" d=\"M 2631 2963 \n",
       "Q 2534 3019 2420 3045 \n",
       "Q 2306 3072 2169 3072 \n",
       "Q 1681 3072 1420 2755 \n",
       "Q 1159 2438 1159 1844 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2956 \n",
       "Q 1341 3275 1631 3429 \n",
       "Q 1922 3584 2338 3584 \n",
       "Q 2397 3584 2469 3576 \n",
       "Q 2541 3569 2628 3553 \n",
       "L 2631 2963 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-20\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-6f\" d=\"M 1959 3097 \n",
       "Q 1497 3097 1228 2736 \n",
       "Q 959 2375 959 1747 \n",
       "Q 959 1119 1226 758 \n",
       "Q 1494 397 1959 397 \n",
       "Q 2419 397 2687 759 \n",
       "Q 2956 1122 2956 1747 \n",
       "Q 2956 2369 2687 2733 \n",
       "Q 2419 3097 1959 3097 \n",
       "z\n",
       "M 1959 3584 \n",
       "Q 2709 3584 3137 3096 \n",
       "Q 3566 2609 3566 1747 \n",
       "Q 3566 888 3137 398 \n",
       "Q 2709 -91 1959 -91 \n",
       "Q 1206 -91 779 398 \n",
       "Q 353 888 353 1747 \n",
       "Q 353 2609 779 3096 \n",
       "Q 1206 3584 1959 3584 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-66\" d=\"M 2375 4863 \n",
       "L 2375 4384 \n",
       "L 1825 4384 \n",
       "Q 1516 4384 1395 4259 \n",
       "Q 1275 4134 1275 3809 \n",
       "L 1275 3500 \n",
       "L 2222 3500 \n",
       "L 2222 3053 \n",
       "L 1275 3053 \n",
       "L 1275 0 \n",
       "L 697 0 \n",
       "L 697 3053 \n",
       "L 147 3053 \n",
       "L 147 3500 \n",
       "L 697 3500 \n",
       "L 697 3744 \n",
       "Q 697 4328 969 4595 \n",
       "Q 1241 4863 1831 4863 \n",
       "L 2375 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-4a\" d=\"M 628 4666 \n",
       "L 1259 4666 \n",
       "L 1259 325 \n",
       "Q 1259 -519 939 -900 \n",
       "Q 619 -1281 -91 -1281 \n",
       "L -331 -1281 \n",
       "L -331 -750 \n",
       "L -134 -750 \n",
       "Q 284 -750 456 -515 \n",
       "Q 628 -281 628 325 \n",
       "L 628 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-6e\" d=\"M 3513 2113 \n",
       "L 3513 0 \n",
       "L 2938 0 \n",
       "L 2938 2094 \n",
       "Q 2938 2591 2744 2837 \n",
       "Q 2550 3084 2163 3084 \n",
       "Q 1697 3084 1428 2787 \n",
       "Q 1159 2491 1159 1978 \n",
       "L 1159 0 \n",
       "L 581 0 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2956 \n",
       "Q 1366 3272 1645 3428 \n",
       "Q 1925 3584 2291 3584 \n",
       "Q 2894 3584 3203 3211 \n",
       "Q 3513 2838 3513 2113 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-73\" d=\"M 2834 3397 \n",
       "L 2834 2853 \n",
       "Q 2591 2978 2328 3040 \n",
       "Q 2066 3103 1784 3103 \n",
       "Q 1356 3103 1142 2972 \n",
       "Q 928 2841 928 2578 \n",
       "Q 928 2378 1081 2264 \n",
       "Q 1234 2150 1697 2047 \n",
       "L 1894 2003 \n",
       "Q 2506 1872 2764 1633 \n",
       "Q 3022 1394 3022 966 \n",
       "Q 3022 478 2636 193 \n",
       "Q 2250 -91 1575 -91 \n",
       "Q 1294 -91 989 -36 \n",
       "Q 684 19 347 128 \n",
       "L 347 722 \n",
       "Q 666 556 975 473 \n",
       "Q 1284 391 1588 391 \n",
       "Q 1994 391 2212 530 \n",
       "Q 2431 669 2431 922 \n",
       "Q 2431 1156 2273 1281 \n",
       "Q 2116 1406 1581 1522 \n",
       "L 1381 1569 \n",
       "Q 847 1681 609 1914 \n",
       "Q 372 2147 372 2553 \n",
       "Q 372 3047 722 3315 \n",
       "Q 1072 3584 1716 3584 \n",
       "Q 2034 3584 2315 3537 \n",
       "Q 2597 3491 2834 3397 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-2d\" d=\"M 313 2009 \n",
       "L 1997 2009 \n",
       "L 1997 1497 \n",
       "L 313 1497 \n",
       "L 313 2009 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-4d\" d=\"M 628 4666 \n",
       "L 1569 4666 \n",
       "L 2759 1491 \n",
       "L 3956 4666 \n",
       "L 4897 4666 \n",
       "L 4897 0 \n",
       "L 4281 0 \n",
       "L 4281 4097 \n",
       "L 3078 897 \n",
       "L 2444 897 \n",
       "L 1241 4097 \n",
       "L 1241 0 \n",
       "L 628 0 \n",
       "L 628 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-6c\" d=\"M 603 4863 \n",
       "L 1178 4863 \n",
       "L 1178 0 \n",
       "L 603 0 \n",
       "L 603 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-61\" d=\"M 2194 1759 \n",
       "Q 1497 1759 1228 1600 \n",
       "Q 959 1441 959 1056 \n",
       "Q 959 750 1161 570 \n",
       "Q 1363 391 1709 391 \n",
       "Q 2188 391 2477 730 \n",
       "Q 2766 1069 2766 1631 \n",
       "L 2766 1759 \n",
       "L 2194 1759 \n",
       "z\n",
       "M 3341 1997 \n",
       "L 3341 0 \n",
       "L 2766 0 \n",
       "L 2766 531 \n",
       "Q 2569 213 2275 61 \n",
       "Q 1981 -91 1556 -91 \n",
       "Q 1019 -91 701 211 \n",
       "Q 384 513 384 1019 \n",
       "Q 384 1609 779 1909 \n",
       "Q 1175 2209 1959 2209 \n",
       "L 2766 2209 \n",
       "L 2766 2266 \n",
       "Q 2766 2663 2505 2880 \n",
       "Q 2244 3097 1772 3097 \n",
       "Q 1472 3097 1187 3025 \n",
       "Q 903 2953 641 2809 \n",
       "L 641 3341 \n",
       "Q 956 3463 1253 3523 \n",
       "Q 1550 3584 1831 3584 \n",
       "Q 2591 3584 2966 3190 \n",
       "Q 3341 2797 3341 1997 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-74\" d=\"M 1172 4494 \n",
       "L 1172 3500 \n",
       "L 2356 3500 \n",
       "L 2356 3053 \n",
       "L 1172 3053 \n",
       "L 1172 1153 \n",
       "Q 1172 725 1289 603 \n",
       "Q 1406 481 1766 481 \n",
       "L 2356 481 \n",
       "L 2356 0 \n",
       "L 1766 0 \n",
       "Q 1100 0 847 248 \n",
       "Q 594 497 594 1153 \n",
       "L 594 3053 \n",
       "L 172 3053 \n",
       "L 172 3500 \n",
       "L 594 3500 \n",
       "L 594 4494 \n",
       "L 1172 4494 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-69\" d=\"M 603 3500 \n",
       "L 1178 3500 \n",
       "L 1178 0 \n",
       "L 603 0 \n",
       "L 603 3500 \n",
       "z\n",
       "M 603 4863 \n",
       "L 1178 4863 \n",
       "L 1178 4134 \n",
       "L 603 4134 \n",
       "L 603 4863 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-63\" d=\"M 3122 3366 \n",
       "L 3122 2828 \n",
       "Q 2878 2963 2633 3030 \n",
       "Q 2388 3097 2138 3097 \n",
       "Q 1578 3097 1268 2742 \n",
       "Q 959 2388 959 1747 \n",
       "Q 959 1106 1268 751 \n",
       "Q 1578 397 2138 397 \n",
       "Q 2388 397 2633 464 \n",
       "Q 2878 531 3122 666 \n",
       "L 3122 134 \n",
       "Q 2881 22 2623 -34 \n",
       "Q 2366 -91 2075 -91 \n",
       "Q 1284 -91 818 406 \n",
       "Q 353 903 353 1747 \n",
       "Q 353 2603 823 3093 \n",
       "Q 1294 3584 2113 3584 \n",
       "Q 2378 3584 2631 3529 \n",
       "Q 2884 3475 3122 3366 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-76\" d=\"M 191 3500 \n",
       "L 800 3500 \n",
       "L 1894 563 \n",
       "L 2988 3500 \n",
       "L 3597 3500 \n",
       "L 2284 0 \n",
       "L 1503 0 \n",
       "L 191 3500 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-67\" d=\"M 2906 1791 \n",
       "Q 2906 2416 2648 2759 \n",
       "Q 2391 3103 1925 3103 \n",
       "Q 1463 3103 1205 2759 \n",
       "Q 947 2416 947 1791 \n",
       "Q 947 1169 1205 825 \n",
       "Q 1463 481 1925 481 \n",
       "Q 2391 481 2648 825 \n",
       "Q 2906 1169 2906 1791 \n",
       "z\n",
       "M 3481 434 \n",
       "Q 3481 -459 3084 -895 \n",
       "Q 2688 -1331 1869 -1331 \n",
       "Q 1566 -1331 1297 -1286 \n",
       "Q 1028 -1241 775 -1147 \n",
       "L 775 -588 \n",
       "Q 1028 -725 1275 -790 \n",
       "Q 1522 -856 1778 -856 \n",
       "Q 2344 -856 2625 -561 \n",
       "Q 2906 -266 2906 331 \n",
       "L 2906 616 \n",
       "Q 2728 306 2450 153 \n",
       "Q 2172 0 1784 0 \n",
       "Q 1141 0 747 490 \n",
       "Q 353 981 353 1791 \n",
       "Q 353 2603 747 3093 \n",
       "Q 1141 3584 1784 3584 \n",
       "Q 2172 3584 2450 3431 \n",
       "Q 2728 3278 2906 2969 \n",
       "L 2906 3500 \n",
       "L 3481 3500 \n",
       "L 3481 434 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-64\" d=\"M 2906 2969 \n",
       "L 2906 4863 \n",
       "L 3481 4863 \n",
       "L 3481 0 \n",
       "L 2906 0 \n",
       "L 2906 525 \n",
       "Q 2725 213 2448 61 \n",
       "Q 2172 -91 1784 -91 \n",
       "Q 1150 -91 751 415 \n",
       "Q 353 922 353 1747 \n",
       "Q 353 2572 751 3078 \n",
       "Q 1150 3584 1784 3584 \n",
       "Q 2172 3584 2448 3432 \n",
       "Q 2725 3281 2906 2969 \n",
       "z\n",
       "M 947 1747 \n",
       "Q 947 1113 1208 752 \n",
       "Q 1469 391 1925 391 \n",
       "Q 2381 391 2643 752 \n",
       "Q 2906 1113 2906 1747 \n",
       "Q 2906 2381 2643 2742 \n",
       "Q 2381 3103 1925 3103 \n",
       "Q 1469 3103 1208 2742 \n",
       "Q 947 2381 947 1747 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-4e\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-75\" x=\"74.804688\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6d\" x=\"138.183594\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-62\" x=\"235.595703\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"299.072266\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-72\" x=\"360.595703\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-20\" x=\"401.708984\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"433.496094\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-66\" x=\"494.677734\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-20\" x=\"529.882812\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-4a\" x=\"561.669922\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"591.162109\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6e\" x=\"652.34375\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"715.722656\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-73\" x=\"777.246094\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-2d\" x=\"829.345703\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-4d\" x=\"865.429688\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-75\" x=\"951.708984\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"1015.087891\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6c\" x=\"1076.611328\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6c\" x=\"1104.394531\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"1132.177734\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-72\" x=\"1193.701172\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-20\" x=\"1234.814453\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6d\" x=\"1266.601562\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-61\" x=\"1364.013672\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-74\" x=\"1425.292969\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-72\" x=\"1464.501953\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-69\" x=\"1505.615234\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-63\" x=\"1533.398438\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"1588.378906\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-73\" x=\"1649.902344\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-20\" x=\"1702.001953\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-61\" x=\"1733.789062\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-76\" x=\"1795.068359\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"1854.248047\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-72\" x=\"1915.771484\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-61\" x=\"1956.884766\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-67\" x=\"2018.164062\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"2081.640625\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-64\" x=\"2143.164062\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_2\">\n",
       "    <g id=\"ytick_1\">\n",
       "     <g id=\"line2d_7\">\n",
       "      <defs>\n",
       "       <path id=\"mc362eb708a\" d=\"M 0 0 \n",
       "L -3.5 0 \n",
       "\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use xlink:href=\"#mc362eb708a\" x=\"43.78125\" y=\"214.756364\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_8\">\n",
       "      <!-- 0.0 -->\n",
       "      <g transform=\"translate(20.878125 218.555582)scale(0.1 -0.1)\">\n",
       "       <defs>\n",
       "        <path id=\"DejaVuSans-2e\" d=\"M 684 794 \n",
       "L 1344 794 \n",
       "L 1344 0 \n",
       "L 684 0 \n",
       "L 684 794 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       </defs>\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_2\">\n",
       "     <g id=\"line2d_8\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mc362eb708a\" x=\"43.78125\" y=\"178.114183\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_9\">\n",
       "      <!-- 0.2 -->\n",
       "      <g transform=\"translate(20.878125 181.913401)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-32\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_3\">\n",
       "     <g id=\"line2d_9\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mc362eb708a\" x=\"43.78125\" y=\"141.472001\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_10\">\n",
       "      <!-- 0.4 -->\n",
       "      <g transform=\"translate(20.878125 145.27122)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-34\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_4\">\n",
       "     <g id=\"line2d_10\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mc362eb708a\" x=\"43.78125\" y=\"104.82982\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_11\">\n",
       "      <!-- 0.6 -->\n",
       "      <g transform=\"translate(20.878125 108.629039)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-36\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_5\">\n",
       "     <g id=\"line2d_11\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mc362eb708a\" x=\"43.78125\" y=\"68.187639\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_12\">\n",
       "      <!-- 0.8 -->\n",
       "      <g transform=\"translate(20.878125 71.986858)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-30\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-38\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"ytick_6\">\n",
       "     <g id=\"line2d_12\">\n",
       "      <g>\n",
       "       <use xlink:href=\"#mc362eb708a\" x=\"43.78125\" y=\"31.545458\" style=\"stroke: #000000; stroke-width: 0.8\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_13\">\n",
       "      <!-- 1.0 -->\n",
       "      <g transform=\"translate(20.878125 35.344677)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-31\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-2e\" x=\"63.623047\"/>\n",
       "       <use xlink:href=\"#DejaVuSans-30\" x=\"95.410156\"/>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"text_14\">\n",
       "     <!-- Cloude decomposition -->\n",
       "     <g transform=\"translate(14.798438 171.602812)rotate(-90)scale(0.1 -0.1)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-43\" d=\"M 4122 4306 \n",
       "L 4122 3641 \n",
       "Q 3803 3938 3442 4084 \n",
       "Q 3081 4231 2675 4231 \n",
       "Q 1875 4231 1450 3742 \n",
       "Q 1025 3253 1025 2328 \n",
       "Q 1025 1406 1450 917 \n",
       "Q 1875 428 2675 428 \n",
       "Q 3081 428 3442 575 \n",
       "Q 3803 722 4122 1019 \n",
       "L 4122 359 \n",
       "Q 3791 134 3420 21 \n",
       "Q 3050 -91 2638 -91 \n",
       "Q 1578 -91 968 557 \n",
       "Q 359 1206 359 2328 \n",
       "Q 359 3453 968 4101 \n",
       "Q 1578 4750 2638 4750 \n",
       "Q 3056 4750 3426 4639 \n",
       "Q 3797 4528 4122 4306 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-70\" d=\"M 1159 525 \n",
       "L 1159 -1331 \n",
       "L 581 -1331 \n",
       "L 581 3500 \n",
       "L 1159 3500 \n",
       "L 1159 2969 \n",
       "Q 1341 3281 1617 3432 \n",
       "Q 1894 3584 2278 3584 \n",
       "Q 2916 3584 3314 3078 \n",
       "Q 3713 2572 3713 1747 \n",
       "Q 3713 922 3314 415 \n",
       "Q 2916 -91 2278 -91 \n",
       "Q 1894 -91 1617 61 \n",
       "Q 1341 213 1159 525 \n",
       "z\n",
       "M 3116 1747 \n",
       "Q 3116 2381 2855 2742 \n",
       "Q 2594 3103 2138 3103 \n",
       "Q 1681 3103 1420 2742 \n",
       "Q 1159 2381 1159 1747 \n",
       "Q 1159 1113 1420 752 \n",
       "Q 1681 391 2138 391 \n",
       "Q 2594 391 2855 752 \n",
       "Q 3116 1113 3116 1747 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-43\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6c\" x=\"69.824219\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"97.607422\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-75\" x=\"158.789062\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-64\" x=\"222.167969\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"285.644531\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-20\" x=\"347.167969\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-64\" x=\"378.955078\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-65\" x=\"442.431641\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-63\" x=\"503.955078\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"558.935547\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6d\" x=\"620.117188\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-70\" x=\"717.529297\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"781.005859\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-73\" x=\"842.1875\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-69\" x=\"894.287109\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-74\" x=\"922.070312\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-69\" x=\"961.279297\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6f\" x=\"989.0625\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-6e\" x=\"1050.244141\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"line2d_13\">\n",
       "    <path d=\"M 58.999432 17.083636 \n",
       "L 62.105183 75.952289 \n",
       "L 65.210935 92.55064 \n",
       "L 68.316686 107.507775 \n",
       "L 71.422437 109.719841 \n",
       "L 74.528189 116.534277 \n",
       "L 77.63394 118.777961 \n",
       "L 80.739692 125.285567 \n",
       "L 83.845443 127.735304 \n",
       "L 86.951194 128.568916 \n",
       "L 90.056946 130.575266 \n",
       "L 93.162697 131.313806 \n",
       "L 96.268449 134.397033 \n",
       "L 99.3742 135.538931 \n",
       "L 102.479951 135.300201 \n",
       "L 105.585703 135.152968 \n",
       "L 108.691454 137.922251 \n",
       "L 111.797205 139.206821 \n",
       "L 114.902957 140.720786 \n",
       "L 118.008708 140.66273 \n",
       "L 121.11446 141.63869 \n",
       "L 124.220211 143.378082 \n",
       "L 127.325962 143.913414 \n",
       "L 130.431714 142.22483 \n",
       "L 133.537465 143.682254 \n",
       "L 136.643217 144.46125 \n",
       "L 139.748968 143.8447 \n",
       "L 142.854719 145.275302 \n",
       "L 145.960471 146.85942 \n",
       "L 149.066222 146.906263 \n",
       "L 152.171974 147.405103 \n",
       "L 155.277725 147.499363 \n",
       "L 158.383476 146.606102 \n",
       "L 161.489228 147.705563 \n",
       "L 164.594979 149.458191 \n",
       "L 167.700731 148.005813 \n",
       "L 170.806482 147.818949 \n",
       "L 173.912233 147.466697 \n",
       "L 177.017985 149.408889 \n",
       "L 180.123736 149.501541 \n",
       "L 183.229487 150.408483 \n",
       "L 186.335239 149.565609 \n",
       "L 189.44099 150.529311 \n",
       "L 192.546742 151.471224 \n",
       "L 195.652493 150.982176 \n",
       "L 198.758244 151.445232 \n",
       "L 201.863996 151.166901 \n",
       "L 204.969747 150.174152 \n",
       "L 208.075499 151.804118 \n",
       "L 211.18125 151.329884 \n",
       "L 214.287001 151.695615 \n",
       "L 217.392753 151.625384 \n",
       "L 220.498504 151.914143 \n",
       "L 223.604256 152.073413 \n",
       "L 226.710007 151.793952 \n",
       "L 229.815758 153.325766 \n",
       "L 232.92151 152.939863 \n",
       "L 236.027261 153.681994 \n",
       "L 239.133013 153.495857 \n",
       "L 242.238764 153.401857 \n",
       "L 245.344515 152.617346 \n",
       "L 248.450267 152.992732 \n",
       "L 251.556018 153.788217 \n",
       "L 254.661769 154.050443 \n",
       "L 257.767521 153.456687 \n",
       "L 260.873272 154.279131 \n",
       "L 263.979024 154.483598 \n",
       "L 267.084775 154.092243 \n",
       "L 270.190526 154.7457 \n",
       "L 273.296278 153.985656 \n",
       "L 276.402029 154.135172 \n",
       "L 279.507781 154.851519 \n",
       "L 282.613532 155.30975 \n",
       "L 285.719283 154.250358 \n",
       "L 288.825035 154.976165 \n",
       "L 291.930786 154.86648 \n",
       "L 295.036538 155.709949 \n",
       "L 298.142289 155.046044 \n",
       "L 301.24804 154.801161 \n",
       "L 304.353792 155.1029 \n",
       "L 307.459543 155.326069 \n",
       "L 310.565295 155.715046 \n",
       "L 313.671046 155.267251 \n",
       "L 316.776797 156.523428 \n",
       "L 319.882549 155.847228 \n",
       "L 322.9883 156.5359 \n",
       "L 326.094051 155.958258 \n",
       "L 329.199803 155.777869 \n",
       "L 332.305554 155.881629 \n",
       "L 335.411306 157.080266 \n",
       "L 338.517057 156.788113 \n",
       "L 341.622808 157.143431 \n",
       "L 344.72856 156.533767 \n",
       "L 347.834311 156.885448 \n",
       "L 350.940063 156.238312 \n",
       "L 354.045814 157.084891 \n",
       "L 357.151565 156.756836 \n",
       "L 360.257317 157.025743 \n",
       "L 363.363068 156.13322 \n",
       "\" clip-path=\"url(#pdee9e64e32)\" style=\"fill: none; stroke: #1f77b4; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_14\">\n",
       "    <path d=\"M 58.999432 214.756364 \n",
       "L 62.105183 170.380054 \n",
       "L 65.210935 165.697249 \n",
       "L 68.316686 163.559565 \n",
       "L 71.422437 162.907213 \n",
       "L 74.528189 161.77405 \n",
       "L 77.63394 160.568254 \n",
       "L 80.739692 161.902717 \n",
       "L 83.845443 163.246084 \n",
       "L 86.951194 161.987469 \n",
       "L 90.056946 162.419333 \n",
       "L 93.162697 161.731662 \n",
       "L 96.268449 161.287844 \n",
       "L 99.3742 164.113676 \n",
       "L 102.479951 162.749819 \n",
       "L 105.585703 161.304891 \n",
       "L 108.691454 162.518887 \n",
       "L 111.797205 162.747678 \n",
       "L 114.902957 162.533544 \n",
       "L 118.008708 162.225806 \n",
       "L 121.11446 163.321454 \n",
       "L 124.220211 163.394313 \n",
       "L 127.325962 164.122114 \n",
       "L 130.431714 163.414535 \n",
       "L 133.537465 163.563393 \n",
       "L 136.643217 163.693318 \n",
       "L 139.748968 163.617763 \n",
       "L 142.854719 163.02708 \n",
       "L 145.960471 164.932906 \n",
       "L 149.066222 164.113418 \n",
       "L 152.171974 164.200756 \n",
       "L 155.277725 164.586884 \n",
       "L 158.383476 163.066453 \n",
       "L 161.489228 164.620144 \n",
       "L 164.594979 164.862856 \n",
       "L 167.700731 164.260608 \n",
       "L 170.806482 163.526004 \n",
       "L 173.912233 163.630255 \n",
       "L 177.017985 164.999383 \n",
       "L 180.123736 164.113665 \n",
       "L 183.229487 164.303938 \n",
       "L 186.335239 163.410951 \n",
       "L 189.44099 164.922169 \n",
       "L 192.546742 164.444213 \n",
       "L 195.652493 164.862103 \n",
       "L 198.758244 164.877622 \n",
       "L 201.863996 165.344722 \n",
       "L 204.969747 164.48621 \n",
       "L 208.075499 165.372663 \n",
       "L 211.18125 165.668515 \n",
       "L 214.287001 164.991162 \n",
       "L 217.392753 164.872258 \n",
       "L 220.498504 164.738655 \n",
       "L 223.604256 164.660164 \n",
       "L 226.710007 164.69232 \n",
       "L 229.815758 165.687878 \n",
       "L 232.92151 165.033356 \n",
       "L 236.027261 164.763551 \n",
       "L 239.133013 165.051343 \n",
       "L 242.238764 165.395787 \n",
       "L 245.344515 164.950098 \n",
       "L 248.450267 165.248224 \n",
       "L 251.556018 164.944933 \n",
       "L 254.661769 164.95284 \n",
       "L 257.767521 165.164186 \n",
       "L 260.873272 164.835434 \n",
       "L 263.979024 165.380588 \n",
       "L 267.084775 165.100423 \n",
       "L 270.190526 165.785623 \n",
       "L 273.296278 165.04579 \n",
       "L 276.402029 164.88657 \n",
       "L 279.507781 165.545185 \n",
       "L 282.613532 165.554859 \n",
       "L 285.719283 165.422064 \n",
       "L 288.825035 165.503931 \n",
       "L 291.930786 165.238027 \n",
       "L 295.036538 165.8514 \n",
       "L 298.142289 165.05305 \n",
       "L 301.24804 165.626719 \n",
       "L 304.353792 165.820846 \n",
       "L 307.459543 166.101469 \n",
       "L 310.565295 165.905989 \n",
       "L 313.671046 164.906129 \n",
       "L 316.776797 165.512886 \n",
       "L 319.882549 165.404133 \n",
       "L 322.9883 166.066841 \n",
       "L 326.094051 165.453601 \n",
       "L 329.199803 165.363716 \n",
       "L 332.305554 165.542442 \n",
       "L 335.411306 166.086365 \n",
       "L 338.517057 165.622126 \n",
       "L 341.622808 166.354625 \n",
       "L 344.72856 165.700849 \n",
       "L 347.834311 165.601652 \n",
       "L 350.940063 165.056575 \n",
       "L 354.045814 165.955479 \n",
       "L 357.151565 165.647219 \n",
       "L 360.257317 165.472352 \n",
       "L 363.363068 165.606212 \n",
       "\" clip-path=\"url(#pdee9e64e32)\" style=\"fill: none; stroke: #ff7f0e; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_15\">\n",
       "    <path d=\"M 58.999432 214.756364 \n",
       "L 62.105183 214.756364 \n",
       "L 65.210935 201.98304 \n",
       "L 68.316686 198.513102 \n",
       "L 71.422437 192.271262 \n",
       "L 74.528189 191.670381 \n",
       "L 77.63394 187.435852 \n",
       "L 80.739692 185.692927 \n",
       "L 83.845443 185.969138 \n",
       "L 86.951194 183.808404 \n",
       "L 90.056946 184.105224 \n",
       "L 93.162697 182.624108 \n",
       "L 96.268449 180.962266 \n",
       "L 99.3742 181.186842 \n",
       "L 102.479951 180.589532 \n",
       "L 105.585703 180.841301 \n",
       "L 108.691454 180.480315 \n",
       "L 111.797205 179.429744 \n",
       "L 114.902957 179.742685 \n",
       "L 118.008708 179.097953 \n",
       "L 121.11446 179.403133 \n",
       "L 124.220211 179.178578 \n",
       "L 127.325962 179.28491 \n",
       "L 130.431714 178.187178 \n",
       "L 133.537465 178.448919 \n",
       "L 136.643217 177.962783 \n",
       "L 139.748968 177.326269 \n",
       "L 142.854719 177.752852 \n",
       "L 145.960471 177.111349 \n",
       "L 149.066222 177.279766 \n",
       "L 152.171974 176.79105 \n",
       "L 155.277725 177.290235 \n",
       "L 158.383476 176.401568 \n",
       "L 161.489228 176.526037 \n",
       "L 164.594979 176.706199 \n",
       "L 167.700731 175.876118 \n",
       "L 170.806482 176.335963 \n",
       "L 173.912233 175.506227 \n",
       "L 177.017985 175.642171 \n",
       "L 180.123736 175.580749 \n",
       "L 183.229487 176.083442 \n",
       "L 186.335239 175.205293 \n",
       "L 189.44099 175.498203 \n",
       "L 192.546742 174.766564 \n",
       "L 195.652493 175.631351 \n",
       "L 198.758244 174.613518 \n",
       "L 201.863996 175.431728 \n",
       "L 204.969747 174.933154 \n",
       "L 208.075499 175.613437 \n",
       "L 211.18125 175.374345 \n",
       "L 214.287001 174.958279 \n",
       "L 217.392753 174.57431 \n",
       "L 220.498504 174.537053 \n",
       "L 223.604256 174.823825 \n",
       "L 226.710007 174.345056 \n",
       "L 229.815758 174.754887 \n",
       "L 232.92151 174.378701 \n",
       "L 236.027261 174.352621 \n",
       "L 239.133013 174.180865 \n",
       "L 242.238764 175.018434 \n",
       "L 245.344515 173.991256 \n",
       "L 248.450267 174.053803 \n",
       "L 251.556018 173.532477 \n",
       "L 254.661769 173.719499 \n",
       "L 257.767521 173.692702 \n",
       "L 260.873272 174.443733 \n",
       "L 263.979024 173.669646 \n",
       "L 267.084775 173.632515 \n",
       "L 270.190526 173.735088 \n",
       "L 273.296278 173.787709 \n",
       "L 276.402029 173.185146 \n",
       "L 279.507781 174.287547 \n",
       "L 282.613532 173.832526 \n",
       "L 285.719283 173.749729 \n",
       "L 288.825035 173.322754 \n",
       "L 291.930786 173.72137 \n",
       "L 295.036538 173.637115 \n",
       "L 298.142289 173.534431 \n",
       "L 301.24804 173.353996 \n",
       "L 304.353792 173.302129 \n",
       "L 307.459543 173.813603 \n",
       "L 310.565295 173.576762 \n",
       "L 313.671046 173.266963 \n",
       "L 316.776797 173.529618 \n",
       "L 319.882549 173.141456 \n",
       "L 322.9883 173.360148 \n",
       "L 326.094051 173.485141 \n",
       "L 329.199803 173.032382 \n",
       "L 332.305554 173.09793 \n",
       "L 335.411306 172.892807 \n",
       "L 338.517057 173.110401 \n",
       "L 341.622808 173.374671 \n",
       "L 344.72856 172.854539 \n",
       "L 347.834311 173.264243 \n",
       "L 350.940063 173.184197 \n",
       "L 354.045814 172.791156 \n",
       "L 357.151565 172.829397 \n",
       "L 360.257317 172.893917 \n",
       "L 363.363068 173.062367 \n",
       "\" clip-path=\"url(#pdee9e64e32)\" style=\"fill: none; stroke: #2ca02c; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_16\">\n",
       "    <path d=\"M 58.999432 214.756364 \n",
       "L 62.105183 214.756364 \n",
       "L 65.210935 214.756364 \n",
       "L 68.316686 211.685211 \n",
       "L 71.422437 208.588995 \n",
       "L 74.528189 206.610131 \n",
       "L 77.63394 203.892811 \n",
       "L 80.739692 203.064591 \n",
       "L 83.845443 201.653614 \n",
       "L 86.951194 200.191037 \n",
       "L 90.056946 199.511404 \n",
       "L 93.162697 197.252557 \n",
       "L 96.268449 196.394843 \n",
       "L 99.3742 196.151193 \n",
       "L 102.479951 196.186955 \n",
       "L 105.585703 194.022423 \n",
       "L 108.691454 194.239642 \n",
       "L 111.797205 193.391868 \n",
       "L 114.902957 193.075678 \n",
       "L 118.008708 191.993756 \n",
       "L 121.11446 191.909295 \n",
       "L 124.220211 191.627247 \n",
       "L 127.325962 191.30171 \n",
       "L 130.431714 189.997015 \n",
       "L 133.537465 190.204443 \n",
       "L 136.643217 190.967569 \n",
       "L 139.748968 189.28503 \n",
       "L 142.854719 188.910461 \n",
       "L 145.960471 188.226964 \n",
       "L 149.066222 188.265299 \n",
       "L 152.171974 188.264683 \n",
       "L 155.277725 187.006157 \n",
       "L 158.383476 187.503534 \n",
       "L 161.489228 187.596739 \n",
       "L 164.594979 187.797337 \n",
       "L 167.700731 186.903214 \n",
       "L 170.806482 187.351983 \n",
       "L 173.912233 186.340216 \n",
       "L 177.017985 185.947939 \n",
       "L 180.123736 186.279286 \n",
       "L 183.229487 186.210921 \n",
       "L 186.335239 185.614848 \n",
       "L 189.44099 185.487556 \n",
       "L 192.546742 185.38739 \n",
       "L 195.652493 185.022857 \n",
       "L 198.758244 184.307989 \n",
       "L 201.863996 184.688935 \n",
       "L 204.969747 184.319193 \n",
       "L 208.075499 184.648159 \n",
       "L 211.18125 184.200493 \n",
       "L 214.287001 184.601767 \n",
       "L 217.392753 184.318375 \n",
       "L 220.498504 183.543745 \n",
       "L 223.604256 183.751947 \n",
       "L 226.710007 183.128734 \n",
       "L 229.815758 183.489053 \n",
       "L 232.92151 183.213659 \n",
       "L 236.027261 183.450779 \n",
       "L 239.133013 182.403203 \n",
       "L 242.238764 182.891031 \n",
       "L 245.344515 182.821916 \n",
       "L 248.450267 182.138873 \n",
       "L 251.556018 182.274531 \n",
       "L 254.661769 182.499114 \n",
       "L 257.767521 182.31079 \n",
       "L 260.873272 182.446528 \n",
       "L 263.979024 182.273889 \n",
       "L 267.084775 182.099192 \n",
       "L 270.190526 182.092555 \n",
       "L 273.296278 182.013534 \n",
       "L 276.402029 181.468024 \n",
       "L 279.507781 181.839042 \n",
       "L 282.613532 181.338758 \n",
       "L 285.719283 181.63582 \n",
       "L 288.825035 181.783207 \n",
       "L 291.930786 181.635979 \n",
       "L 295.036538 181.614688 \n",
       "L 298.142289 181.422904 \n",
       "L 301.24804 181.065058 \n",
       "L 304.353792 180.968995 \n",
       "L 307.459543 181.218955 \n",
       "L 310.565295 181.296331 \n",
       "L 313.671046 180.958072 \n",
       "L 316.776797 181.391483 \n",
       "L 319.882549 181.194537 \n",
       "L 322.9883 181.301794 \n",
       "L 326.094051 180.546089 \n",
       "L 329.199803 180.647026 \n",
       "L 332.305554 180.388587 \n",
       "L 335.411306 180.690209 \n",
       "L 338.517057 180.629134 \n",
       "L 341.622808 180.494351 \n",
       "L 344.72856 180.43721 \n",
       "L 347.834311 180.135236 \n",
       "L 350.940063 180.481814 \n",
       "L 354.045814 179.916145 \n",
       "L 357.151565 180.477251 \n",
       "L 360.257317 179.97958 \n",
       "L 363.363068 180.126661 \n",
       "\" clip-path=\"url(#pdee9e64e32)\" style=\"fill: none; stroke: #d62728; stroke-width: 1.5; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path d=\"M 43.78125 224.64 \n",
       "L 43.78125 7.2 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path d=\"M 378.58125 224.64 \n",
       "L 378.58125 7.2 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path d=\"M 43.78125 224.64 \n",
       "L 378.58125 224.64 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path d=\"M 43.78125 7.2 \n",
       "L 378.58125 7.2 \n",
       "\" style=\"fill: none; stroke: #000000; stroke-width: 0.8; stroke-linejoin: miter; stroke-linecap: square\"/>\n",
       "   </g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pdee9e64e32\">\n",
       "   <rect x=\"43.78125\" y=\"7.2\" width=\"334.8\" height=\"217.44\"/>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "jmax = 100\n",
    "imax = 100\n",
    "mCD00sums = []\n",
    "for i in range(1,imax):\n",
    "    mCD00sum = np.array([0,0,0,0])\n",
    "    for j in range(jmax):\n",
    "        M = RandomMuellerMatrix(i)\n",
    "        mCD = Cloude_Decomposition(M)\n",
    "        mCD00sum = mCD00sum + np.array([m[0,0] for m in mCD])\n",
    "    mCD00sums.append(mCD00sum/jmax)\n",
    "plt.figure()\n",
    "plt.plot(mCD00sums)\n",
    "plt.xlabel(\"Number of Jones-Mueller matrices averaged\")\n",
    "plt.ylabel(\"Cloude decomposition\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Lu-Chipman decomposition*  decomposes a given Mueller matrix $\\mathbf{M}$ into the ordered product of three matrices:\n",
    "\n",
    "$$\n",
    "\\mathbf{M} = \\mathbf{M}_\\Delta \\mathbf{M}_R \\mathbf{M}_D\n",
    "$$\n",
    "where $\\mathbf{M}_\\Delta$ is a depolarizer, $\\mathbf{M}_R$ is a retarder, and $\\mathbf{M}_D$ is a diattenuator.  Notice that if there is only one Jones-Mueller matrix used to create the random matrix, there will be no depolarization.\n",
    "\n",
    "*S.-Y. Lu and R. A. Chipman, “Interpretation of Mueller\n",
    "matrices based on polar decomposition,” J. Opt. Soc. Am. A \n",
    "<b>13</b>, 1106–1113 (1996)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " M =\n",
      "\n",
      "[[ 0.84442092  0.1075449   0.06352588  0.05409045]\n",
      " [ 0.21973306  0.44426721 -0.13529821  0.11410266]\n",
      " [ 0.23420748  0.03277545 -0.11947241 -0.13426277]\n",
      " [ 0.08729154  0.07995964 -0.03015655 -0.0153505 ]]\n",
      "\n",
      " Depolarizer =\n",
      "\n",
      "[[1.         0.         0.         0.        ]\n",
      " [0.20185409 0.54228623 0.00714284 0.07993953]\n",
      " [0.30106685 0.00714284 0.24083235 0.04079128]\n",
      " [0.09770437 0.07993953 0.04079128 0.03708036]]\n",
      "\n",
      " Retarder =\n",
      "\n",
      "[[ 1.00000000e+00  2.10335221e-17 -1.89193279e-17  0.00000000e+00]\n",
      " [ 1.11022302e-16  8.54280664e-01 -3.97300271e-01  3.35197020e-01]\n",
      " [ 4.44089210e-16 -1.03253526e-01 -7.61690669e-01 -6.39660874e-01]\n",
      " [ 0.00000000e+00  5.09453881e-01  5.11839642e-01 -6.91720264e-01]]\n",
      "\n",
      " Diattenuator =\n",
      "\n",
      "[[0.84442092 0.1075449  0.06352588 0.05409045]\n",
      " [0.1075449  0.84027184 0.00407193 0.00346713]\n",
      " [0.06352588 0.00407193 0.8357836  0.00204801]\n",
      " [0.05409045 0.00346713 0.00204801 0.83512216]]\n",
      "\n",
      " The product Depolarizer . Retarder .  Diattenuator =\n",
      "\n",
      "[[ 0.84442092  0.1075449   0.06352588  0.05409045]\n",
      " [ 0.21973306  0.44426721 -0.13529821  0.11410266]\n",
      " [ 0.23420748  0.03277545 -0.11947241 -0.13426277]\n",
      " [ 0.08729154  0.07995964 -0.03015655 -0.0153505 ]]\n"
     ]
    }
   ],
   "source": [
    "def printMatrix(name,M):\n",
    "    print(\"\\n\",name,\"=\\n\")\n",
    "    print(M)\n",
    "\n",
    "M = RandomMuellerMatrix(4)\n",
    "depol, ret, diatten = Lu_Chipman_Decomposition(M)\n",
    "printMatrix(\"M\",M)\n",
    "printMatrix(\"Depolarizer\",depol)\n",
    "printMatrix(\"Retarder\",ret)\n",
    "printMatrix(\"Diattenuator\",diatten)\n",
    "printMatrix(\"The product Depolarizer . Retarder .  Diattenuator\",depol @ ret @ diatten)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The reverse Lu-Chipman decomposition is similar to the Lu-Chipman decomposition, except that the order of the elements us reversed. That is,\n",
    "$$\n",
    "\\mathbf{M} = \\mathbf{M}^\\prime_D \\mathbf{M}^\\prime_R  \\mathbf{M}^\\prime_\\Delta \n",
    "$$\n",
    "where $\\mathbf{M}^\\prime_D$ is a diattenuator, $\\mathbf{M}^\\prime_R$ is a retarder, and $\\mathbf{M}^\\prime_\\Delta$ is a depolarizer. Note that highly depolarizing Mueller matrices often cannot be decomposed in this fashion, an exception will be thrown if this is the case."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " M =\n",
      "\n",
      "[[ 0.79050245  0.31080475  0.13624337 -0.2012983 ]\n",
      " [-0.22657717 -0.64638751 -0.16880211 -0.25056315]\n",
      " [ 0.19461597  0.0578249   0.53578195 -0.31627667]\n",
      " [ 0.17512845  0.33887398 -0.24140583 -0.45722454]]\n",
      "\n",
      " Diattenuator =\n",
      "\n",
      "[[ 0.87059006 -0.230308    0.2884748   0.30995087]\n",
      " [-0.230308    0.75822452 -0.04163903 -0.04473893]\n",
      " [ 0.2884748  -0.04163903  0.77713682  0.05603824]\n",
      " [ 0.30995087 -0.04473893  0.05603824  0.78519151]]\n",
      "\n",
      " Retarder =\n",
      "\n",
      "[[ 1.          0.          0.          0.        ]\n",
      " [ 0.         -0.87883829 -0.22590361 -0.4202509 ]\n",
      " [ 0.          0.01769794  0.86476707 -0.50186123]\n",
      " [ 0.          0.4767914  -0.44849244 -0.75599239]]\n",
      "\n",
      " Depolarizer =\n",
      "\n",
      "[[ 1.          0.          0.          0.        ]\n",
      " [-0.07088282  0.91237903  0.01709567  0.05714633]\n",
      " [-0.01846463  0.01709567  0.82188915  0.01194215]\n",
      " [ 0.18385422  0.05714633  0.01194215  0.79183899]]\n",
      "\n",
      " The product Diattenuator . Retarder .  Depolarizer =\n",
      "\n",
      "[[ 0.79050245  0.31080475  0.13624337 -0.2012983 ]\n",
      " [-0.22657717 -0.64638751 -0.16880211 -0.25056315]\n",
      " [ 0.19461597  0.0578249   0.53578195 -0.31627667]\n",
      " [ 0.17512845  0.33887398 -0.24140583 -0.45722454]]\n"
     ]
    }
   ],
   "source": [
    "M = RandomMuellerMatrix(2)\n",
    "diatten, ret, depol = Reverse_Lu_Chipman_Decomposition(M)\n",
    "printMatrix(\"M\",M)\n",
    "printMatrix(\"Diattenuator\",diatten)\n",
    "printMatrix(\"Retarder\",ret)\n",
    "printMatrix(\"Depolarizer\",depol)\n",
    "printMatrix(\"The product Diattenuator . Retarder .  Depolarizer\", diatten @ ret @ depol)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The symmetric decomposition, introduced by Ossikovski,* is a decomposition that treats the ordering of the Mueller matrix product as symmetric. That is, the Mueller matrix $\\mathbf{M}$ is decomposed into \n",
    "$$\n",
    "\\mathbf{M} = \\mathbf{M}_{D_2} \\mathbf{M}_{R_2}  \\mathbf{M}_\\Delta \\mathbf{M}_{R_1} \\mathbf{M}_{D_1}\n",
    "$$\n",
    "where $\\mathbf{M}_{D_1}$ and $\\mathbf{M}_{D_2}$ are a diattenuators, $\\mathbf{M}^\\prime_{R_1}$ and $\\mathbf{M}^\\prime_{R_2}$ are retarders, and $\\mathbf{M}_\\Delta$ is a diagonal depolarizer.<br>\n",
    "\n",
    "*R. Ossikovski, \"Analysis of depolarizing Mueller matrices\n",
    "through a symmetric decomposition,\" J. Opt. Soc. Am. A, <b>26</b>(5), 1109-1118 (2009)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " M =\n",
      "\n",
      "[[ 1.31346355 -0.70433204 -0.05792289 -0.42159147]\n",
      " [-0.59531681  0.30343934 -0.47341912  0.52095325]\n",
      " [ 0.31783609 -0.24582591 -0.39663839  0.37667674]\n",
      " [ 0.27500732 -0.26594446  0.04012768 -0.18661019]]\n",
      "\n",
      " diatten2 =\n",
      "\n",
      "[[ 1.         -0.42564353  0.31261478  0.10704983]\n",
      " [-0.42564353  0.94073622 -0.0722223  -0.02473135]\n",
      " [ 0.31261478 -0.0722223   0.8954451   0.01816399]\n",
      " [ 0.10704983 -0.02473135  0.01816399  0.84862125]]\n",
      "\n",
      " ret2 =\n",
      "\n",
      "[[ 1.          0.          0.          0.        ]\n",
      " [ 0.          0.70579373 -0.26909955  0.6553172 ]\n",
      " [ 0.          0.69389627  0.44894296 -0.56299039]\n",
      " [ 0.         -0.14269958  0.85207726  0.5035883 ]]\n",
      "\n",
      " depol =\n",
      "\n",
      "[[1.31231491 0.         0.         0.        ]\n",
      " [0.         1.31231491 0.         0.        ]\n",
      " [0.         0.         0.24752227 0.        ]\n",
      " [0.         0.         0.         0.24752227]]\n",
      "\n",
      " ret1 =\n",
      "\n",
      "[[ 1.          0.          0.          0.        ]\n",
      " [ 0.         -0.01944212 -0.73046083  0.6826778 ]\n",
      " [ 0.         -0.9627385   0.19788894  0.18432186]\n",
      " [ 0.         -0.26973428 -0.65365659 -0.70709015]]\n",
      "\n",
      " diatten1 =\n",
      "\n",
      "[[ 1.         -0.50453294 -0.15004366 -0.31959462]\n",
      " [-0.50453294  0.93027935  0.04234118  0.09018718]\n",
      " [-0.15004366  0.04234118  0.80049588  0.02682087]\n",
      " [-0.31959462  0.09018718  0.02682087  0.84503274]]\n",
      "\n",
      " The product Diattenuator2 . Retarder2 .  Depolarizer . Retarder1 . Diattenuator1 =\n",
      "\n",
      "[[ 1.31346355 -0.70433204 -0.05792289 -0.42159147]\n",
      " [-0.59531681  0.30343934 -0.47341912  0.52095325]\n",
      " [ 0.31783609 -0.24582591 -0.39663839  0.37667674]\n",
      " [ 0.27500732 -0.26594446  0.04012768 -0.18661019]]\n"
     ]
    }
   ],
   "source": [
    "M = RandomMuellerMatrix(2)\n",
    "diatten2, ret2, depol, ret1, diatten1 = Symmetric_Decomposition(M)\n",
    "printMatrix(\"M\",M)\n",
    "printMatrix(\"diatten2\",diatten2)\n",
    "printMatrix(\"ret2\",ret2)\n",
    "printMatrix(\"depol\",depol)\n",
    "printMatrix(\"ret1\",ret1)\n",
    "printMatrix(\"diatten1\",diatten1)\n",
    "printMatrix(\"The product Diattenuator2 . Retarder2 .  Depolarizer . Retarder1 . Diattenuator1\",\n",
    "            diatten2 @ ret2 @ depol @ ret1 @ diatten1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The differential decomposition is simply the matrix logarithm of the Mueller matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " M =\n",
      "\n",
      "[[ 0.90254645  0.27385362  0.30832524 -0.28841948]\n",
      " [-0.32530387 -0.31270702 -0.36702936 -0.22067358]\n",
      " [-0.10609641 -0.01203455 -0.22551256  0.15574008]\n",
      " [-0.40125467 -0.27026781 -0.04613747  0.37130898]]\n",
      "\n",
      " L =\n",
      "\n",
      "[[-0.28858548  0.16185659  0.85000633 -0.74234137]\n",
      " [-1.10744528 -2.89640883 -6.81363824  0.49688726]\n",
      " [ 0.53841303  1.40068116  0.37418308  0.5630028 ]\n",
      " [-1.01346942 -0.95694393 -2.34927816 -0.91739108]]\n",
      "\n",
      " MuellerExp(L) =\n",
      "\n",
      "[[ 0.90254645  0.27385362  0.30832524 -0.28841948]\n",
      " [-0.32530387 -0.31270702 -0.36702936 -0.22067358]\n",
      " [-0.10609641 -0.01203455 -0.22551256  0.15574008]\n",
      " [-0.40125467 -0.27026781 -0.04613747  0.37130898]]\n"
     ]
    }
   ],
   "source": [
    "M = RandomMuellerMatrix(4)\n",
    "L = MuellerLog(M)\n",
    "printMatrix(\"M\",M)\n",
    "printMatrix(\"L\",L)\n",
    "printMatrix(\"MuellerExp(L)\",MuellerExp(L))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Other parameters\n",
    "----------------\n",
    "One can obtain other parameters associated with a Mueller matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tmax =  1.1130487259621076\n",
      "Tmin =  0.3550748776407327\n",
      "diattenuation =  0.5162874886428319\n",
      "linear diattenuation =  0.5008220205047619\n",
      "polarization dependent loss =  4.961942308101194\n",
      "polarizance =  0.5633462437213892\n",
      "depolarization index =  0.6589112048969448\n",
      "extinction_ratio =  3.1346873463920426\n"
     ]
    }
   ],
   "source": [
    "M = RandomMuellerMatrix(4)\n",
    "\n",
    "print(\"Tmax = \",M.Tmax())\n",
    "print(\"Tmin = \",M.Tmin())\n",
    "print(\"diattenuation = \",M.diattenuation())\n",
    "print(\"linear diattenuation = \",M.linear_diattenuation())\n",
    "print(\"polarization dependent loss = \",M.polarization_dependent_loss())\n",
    "print(\"polarizance = \",M.polarizance())\n",
    "print(\"depolarization index = \",M.depolarization_index())\n",
    "print(\"extinction_ratio = \",M.extinction_ratio())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There is also a class `CharacterizedMueller` that performs a Lu-Chipman decomposition and extracts parameters from them.  This is treated as a separate class, because initialization performs the decomposition, assigning values to the parameters. Note that the parameters differ from those shown above, due to differences in definition.\n",
    "\n",
    "N. Ghosh, M.F.G. Wood, and I.A. Vitkin, ''Mueller matrix decomposition for extraction of individual polarization parameters from complex turbid media exhibiting multiple scattering, optical activity, and linear birefringence,'' J. Biomedical Opt. <b>13</b>, 044036 (2008)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mdepol = \n",
      "[[ 1.          0.          0.          0.        ]\n",
      " [-0.08476877  0.27377418 -0.03728996  0.09656993]\n",
      " [-0.20204637 -0.03728996  0.44373316 -0.09981802]\n",
      " [-0.26307903  0.09656993 -0.09981802  0.59248849]]\n",
      "Mret = \n",
      "[[ 1.00000000e+00 -9.45424294e-17 -7.28583860e-17 -5.55111512e-17]\n",
      " [ 0.00000000e+00 -5.62772927e-01 -5.92775720e-01 -5.76110734e-01]\n",
      " [-1.24900090e-16 -3.11903969e-01  7.97714968e-01 -5.16107299e-01]\n",
      " [ 5.55111512e-17  7.65508031e-01 -1.10759990e-01 -6.33821488e-01]]\n",
      "Mdiatten = \n",
      "[[ 0.7340618  -0.34245359  0.13371808  0.09206573]\n",
      " [-0.34245359  0.71472066 -0.03360347 -0.0231362 ]\n",
      " [ 0.13371808 -0.03360347  0.64178295  0.00903401]\n",
      " [ 0.09206573 -0.0231362   0.00903401  0.63488175]]\n",
      "DiattenuationVector = [-0.46651875  0.18216188  0.12541959]\n",
      "Diattenuation = 0.516287488642832\n",
      "CircularDiattenuation = 0.12541959458812751\n",
      "LinearDiattenuation = 0.5008220205047619\n",
      "DiattenuationAngle = 1.384664060309693 rad (79.33540669919348 deg)\n",
      "PolarizanceVector = [-0.08476877 -0.20204637 -0.26307903]\n",
      "Polarizance = 0.342372684079807\n",
      "DepolarizationCoefficient = 0.4366652735461514\n",
      "LinearRetardance = 2.2572802432682404 rad (129.33263111753394 deg)\n",
      "OpticalRotation = 0.4371035715152117 rad (25.04418985791638 deg)\n",
      "Retardance = 2.345409580619083 rad (134.38207019902185deg)\n",
      "RetardanceAngle = 0.7135526418560333 rad (40.88355483876068 deg)\n"
     ]
    }
   ],
   "source": [
    "parametersM = CharacterizedMueller(M)\n",
    "print(parametersM)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
